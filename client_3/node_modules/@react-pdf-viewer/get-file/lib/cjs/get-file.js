'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var core = require('@react-pdf-viewer/core');

function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () {
                        return e[k];
                    }
                });
            }
        });
    }
    n['default'] = e;
    return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);

var DownloadIcon = function () {
    return (React__namespace.createElement(core.Icon, { size: 16 },
        React__namespace.createElement("path", { d: "M11.5 19.5L11.5 5" }),
        React__namespace.createElement("path", { d: "M17 14L11.5 19.5 6 14" }),
        React__namespace.createElement("path", { d: "M17.5.5h5a1,1,0,0,1,1,1v21a1,1,0,0,1-1,1h-5" }),
        React__namespace.createElement("path", { d: "M6.5.5h-5a1,1,0,0,0-1,1v21a1,1,0,0,0,1,1h5" })));
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var TOOLTIP_OFFSET = { left: 0, top: 8 };
var DownloadButton = function (_a) {
    var onClick = _a.onClick;
    var l10n = React__namespace.useContext(core.LocalizationContext);
    var label = l10n && l10n.download ? l10n.download.download : 'Download';
    return (React__namespace.createElement(core.Tooltip, { position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { onClick: onClick },
            React__namespace.createElement(DownloadIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET }));
};

var downloadFile = function (file, saveAs) {
    var blobUrl = typeof file.data === 'string' ? '' : URL.createObjectURL(new Blob([file.data], { type: 'application/pdf' }));
    var link = document.createElement('a');
    link.style.display = 'none';
    link.href = blobUrl || file.name;
    link.setAttribute('download', saveAs);
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    if (blobUrl) {
        URL.revokeObjectURL(blobUrl);
    }
};

var Download = function (_a) {
    var children = _a.children, fileNameGenerator = _a.fileNameGenerator, store = _a.store;
    var _b = React__namespace.useState(store.get('file')), currentFile = _b[0], setCurrentFile = _b[1];
    var handleFileChanged = function (file) {
        setCurrentFile(file);
    };
    React__namespace.useEffect(function () {
        store.subscribe('file', handleFileChanged);
        return function () {
            store.unsubscribe('file', handleFileChanged);
        };
    }, []);
    var download = function () {
        if (currentFile) {
            downloadFile(currentFile, fileNameGenerator(currentFile));
        }
    };
    var defaultChildren = function (props) { return React__namespace.createElement(DownloadButton, { onClick: props.onClick }); };
    var render = children || defaultChildren;
    return render({
        onClick: download,
    });
};

var DownloadMenuItem = function (_a) {
    var onClick = _a.onClick;
    var l10n = React__namespace.useContext(core.LocalizationContext);
    var label = l10n && l10n.download ? l10n.download.download : 'Download';
    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(DownloadIcon, null), onClick: onClick }, label));
};

var getFileName = function (url) {
    var str = url.split('/').pop();
    return str ? str.split('#')[0].split('?')[0] : url;
};

var getFilePlugin = function (props) {
    var store = React__namespace.useMemo(function () { return core.createStore({}); }, []);
    var defaultFileNameGenerator = function (file) {
        return typeof file.data === 'object' ? 'document.pdf' : getFileName(file.name);
    };
    var DownloadDecorator = function (downloadProps) { return (React__namespace.createElement(Download, __assign({}, downloadProps, { fileNameGenerator: props ? props.fileNameGenerator || defaultFileNameGenerator : defaultFileNameGenerator, store: store }))); };
    var DownloadButtonDecorator = function () { return (React__namespace.createElement(DownloadDecorator, null, function (props) { return React__namespace.createElement(DownloadButton, __assign({}, props)); })); };
    var DownloadMenuItemDecorator = function (props) { return (React__namespace.createElement(DownloadDecorator, null, function (p) { return (React__namespace.createElement(DownloadMenuItem, { onClick: function () {
            p.onClick();
            props.onClick();
        } })); })); };
    return {
        onViewerStateChange: function (viewerState) {
            store.update('file', viewerState.file);
            return viewerState;
        },
        Download: DownloadDecorator,
        DownloadButton: DownloadButtonDecorator,
        DownloadMenuItem: DownloadMenuItemDecorator,
    };
};

exports.DownloadIcon = DownloadIcon;
exports.getFilePlugin = getFilePlugin;
