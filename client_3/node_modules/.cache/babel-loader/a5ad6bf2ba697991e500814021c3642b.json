{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/Hubrium v_2 copie/client_3/src/components/Body/Routes/QueryButton.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Dropdown from './Dropdown';\nimport { getCourses } from '../../../actions';\nimport GoogleAuth from '../../GoogleAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QueryButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      elementList: [\"all_1\"]\n    };\n\n    this.onElementClick = elem => {\n      if (this.state.elementList.includes(elem)) {\n        const newArray = this.state.elementList.filter(item => item !== elem);\n        this.setState({\n          elementList: newArray\n        });\n      } else {\n        const newArray = [...this.state.elementList.filter(item => item.slice(-2) !== elem.slice(-2)), elem];\n        this.setState({\n          elementList: newArray\n        });\n      }\n    };\n\n    this.renderClassName = (className, name) => {\n      return this.state.elementList.includes(name) ? className + \" active\" : className;\n    };\n  }\n\n  render() {\n    this.props.callback(this.state.elementList);\n    let x = 0;\n    const array = [];\n    let currentArray = [];\n\n    for (let item of this.props.message) {\n      if (typeof item === 'number') {\n        currentArray.push(item);\n        array.push(currentArray);\n        currentArray = [];\n      } else {\n        currentArray.push(item);\n      }\n    }\n\n    console.log(array);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_search_container\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleAuth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu_search_element\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            info: [0, 1, 2, 3, 4, 5, 6, 7],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.onElementClick(\"all_1\"),\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.onElementClick(\"histoire_1\"),\n              children: \"Histoire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.onElementClick(\"math_1\"),\n              children: \"Math\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.onElementClick(\"geographie_1\"),\n              children: \"G\\xE9ographie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.onElementClick(\"franÃ§ais_1\"),\n              children: \"Fran\\xE7ais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.onElementClick(\"svt_1\"),\n              children: \"SVT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.onElementClick(\"pc_1\"),\n              children: \"Physique-Chimie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.onElementClick(\"anglais_1\"),\n              children: \"Anglais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu_search_element\",\n        children: array.map(elemList => {\n          x++;\n          let y = 50;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${this.props.notActive ? \"notActive\" : \"\"}`,\n            children: elemList.slice(-2).map(elem => {\n              y++;\n              const classname = 'element' + (y === 51 ? ' element_left' : '') + (elem === elemList[elemList.length - 2] ? ' element_right' : '');\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                className: this.renderClassName(classname, `${elem}_${elemList[elemList.length - 1]}`),\n                onClick: () => this.onElementClick(`${elem}_${elemList[elemList.length - 1]}`, this.state.lastQuerySubmit),\n                children: elem\n              }, elem, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 45\n              }, this);\n            })\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCourses\n})(QueryButton);\n/*\n                   \n                        {\n                            \n                        }\n                        <span className={this.renderClassName(\"element element_left\", \"1_MONTH_2\")} onClick={() => this.onElementClick(\"1_MONTH_2\")}>This Month</span>\n                        <span className={this.renderClassName(\"element\", \"6_MONTH_2\")} onClick={() => this.onElementClick(\"6_MONTH_2\")}>Last 6 months</span>\n                        <span className={this.renderClassName(\"element\", \"1_YEAR_2\")} onClick={() => this.onElementClick(\"1_YEAR_2\")}>This Year</span>\n                        <span className={this.renderClassName(\"element element_right\", \"3_YEAR_2\")} onClick={() => this.onElementClick(\"3_YEAR_2\")}>Last 3 years</span>\n                    \n                    <div className={`${this.props.notActive ? \"notActive\" : \"\"}`}>\n                        <span className={this.renderClassName(\"element element_left\", \"pdf_3\")} onClick={() => this.onElementClick(\"pdf_3\")}>PDF</span>\n                        <span className={this.renderClassName(\"element\", \"text_3\")} onClick={() => this.onElementClick(\"text_3\")}>Text</span>\n                        <span className={this.renderClassName(\"element element_right\", \"image_3\")} onClick={() => this.onElementClick(\"image_3\")}>Image</span>\n                    </div>\n                    <div className={`${this.props.notActive ? \"notActive\" : \"\"}`}>\n                        <span className={this.renderClassName(\"element element_left element_right\", \"pinned_4\")} onClick={() => this.onElementClick(\"pinned_4\")}>Pinned</span>\n                    </div>\n                    <div>\n                        <span className={this.renderClassName(\"element element_left\", \"most_viewed_5\")} onClick={() => this.onElementClick(\"most_viewed_5\", this.state.lastQuerySubmit)}>Most Views</span>\n                        <span className={this.renderClassName(\"element\", \"most_liked_5\")} onClick={() => this.onElementClick(\"most_liked_5\", this.state.lastQuerySubmit)}>Most Likes</span>\n                        <span className={this.renderClassName(\"element element_right\", \"most_pins_5\")} onClick={() => this.onElementClick(\"most_pins_5\", this.state.lastQuerySubmit)}>Most Pins</span>\n                    </div>\n                </div>\n*/","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2 copie/client_3/src/components/Body/Routes/QueryButton.js"],"names":["React","connect","Dropdown","getCourses","GoogleAuth","QueryButton","Component","state","elementList","onElementClick","elem","includes","newArray","filter","item","setState","slice","renderClassName","className","name","render","props","callback","x","array","currentArray","message","push","console","log","map","elemList","y","notActive","classname","length","lastQuerySubmit","mapStateToProps","ownProps","isSignedIn","auth","userId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropdown from './Dropdown';\n\nimport { getCourses } from '../../../actions';\nimport GoogleAuth from '../../GoogleAuth';\n\nclass QueryButton extends React.Component {\n    state = {elementList: [\"all_1\"]}\n\n    onElementClick = (elem) => {\n        if (this.state.elementList.includes(elem)) {\n            const newArray = this.state.elementList.filter((item) => item !== elem);\n            this.setState({elementList: newArray});\n        } else {\n            const newArray = [...this.state.elementList.filter((item) => item.slice(-2) !== elem.slice(-2)), elem];\n            this.setState({elementList: newArray});\n        }\n    }\n\n    renderClassName = (className, name) => {\n        return this.state.elementList.includes(name) ? className + \" active\": className;\n    }\n\n    render() {\n        this.props.callback(this.state.elementList);\n        let x=0;\n\n        const array = [];\n        let currentArray = [];\n        for (let item of this.props.message) {\n            if (typeof item==='number') {\n                currentArray.push(item);\n                array.push(currentArray)\n                currentArray = [];\n            } else {\n                currentArray.push(item);\n            }\n        }\n        console.log(array);\n\n        return (\n            <div className=\"menu_search_container\">\n                <GoogleAuth />\n                <div className=\"menu_search_element\">\n                    <span>\n                        <Dropdown info={[0, 1, 2, 3, 4, 5, 6, 7]}>\n                            <div onClick={() => this.onElementClick(\"all_1\")}>All</div>\n                            <div onClick={() => this.onElementClick(\"histoire_1\")}>Histoire</div>\n                            <div onClick={() => this.onElementClick(\"math_1\")}>Math</div>\n                            <div onClick={() => this.onElementClick(\"geographie_1\")}>GÃ©ographie</div>\n                            <div onClick={() => this.onElementClick(\"franÃ§ais_1\")}>FranÃ§ais</div>\n                            <div onClick={() => this.onElementClick(\"svt_1\")}>SVT</div>\n                            <div onClick={() => this.onElementClick(\"pc_1\")}>Physique-Chimie</div>\n                            <div onClick={() => this.onElementClick(\"anglais_1\")}>Anglais</div>\n                        </Dropdown>\n                    </span>\n                </div>\n                <div className=\"menu_search_element\">\n                    {\n                        array.map((elemList) => {\n                            x++;\n                            let y = 50;\n                            return (\n                                <div key={x} className={`${this.props.notActive ? \"notActive\" : \"\"}`}>\n                                    {elemList.slice(-2).map((elem) => {\n                                        y++;\n                                        const classname = 'element' + (y===51 ? ' element_left' : '') + (elem===elemList[elemList.length-2] ? ' element_right' : '');\n                                        return (\n                                            <span \n                                                key={elem} \n                                                className={this.renderClassName(classname, `${elem}_${elemList[elemList.length-1]}`)} \n                                                onClick={() => this.onElementClick(`${elem}_${elemList[elemList.length-1]}`, this.state.lastQuerySubmit)}>\n                                                {elem}\n                                            </span>\n                                        );\n                                    })}\n                                </div>\n                            );\n                            \n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {  isSignedIn : state.auth.isSignedIn, userId: state.auth.userId  };\n}\n\nexport default connect(mapStateToProps, {getCourses})(QueryButton);\n\n/*\n                   \n                        {\n                            \n                        }\n                        <span className={this.renderClassName(\"element element_left\", \"1_MONTH_2\")} onClick={() => this.onElementClick(\"1_MONTH_2\")}>This Month</span>\n                        <span className={this.renderClassName(\"element\", \"6_MONTH_2\")} onClick={() => this.onElementClick(\"6_MONTH_2\")}>Last 6 months</span>\n                        <span className={this.renderClassName(\"element\", \"1_YEAR_2\")} onClick={() => this.onElementClick(\"1_YEAR_2\")}>This Year</span>\n                        <span className={this.renderClassName(\"element element_right\", \"3_YEAR_2\")} onClick={() => this.onElementClick(\"3_YEAR_2\")}>Last 3 years</span>\n                    \n                    <div className={`${this.props.notActive ? \"notActive\" : \"\"}`}>\n                        <span className={this.renderClassName(\"element element_left\", \"pdf_3\")} onClick={() => this.onElementClick(\"pdf_3\")}>PDF</span>\n                        <span className={this.renderClassName(\"element\", \"text_3\")} onClick={() => this.onElementClick(\"text_3\")}>Text</span>\n                        <span className={this.renderClassName(\"element element_right\", \"image_3\")} onClick={() => this.onElementClick(\"image_3\")}>Image</span>\n                    </div>\n                    <div className={`${this.props.notActive ? \"notActive\" : \"\"}`}>\n                        <span className={this.renderClassName(\"element element_left element_right\", \"pinned_4\")} onClick={() => this.onElementClick(\"pinned_4\")}>Pinned</span>\n                    </div>\n                    <div>\n                        <span className={this.renderClassName(\"element element_left\", \"most_viewed_5\")} onClick={() => this.onElementClick(\"most_viewed_5\", this.state.lastQuerySubmit)}>Most Views</span>\n                        <span className={this.renderClassName(\"element\", \"most_liked_5\")} onClick={() => this.onElementClick(\"most_liked_5\", this.state.lastQuerySubmit)}>Most Likes</span>\n                        <span className={this.renderClassName(\"element element_right\", \"most_pins_5\")} onClick={() => this.onElementClick(\"most_pins_5\", this.state.lastQuerySubmit)}>Most Pins</span>\n                    </div>\n                </div>\n*/"]},"metadata":{},"sourceType":"module"}