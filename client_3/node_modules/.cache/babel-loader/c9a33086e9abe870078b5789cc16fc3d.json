{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/EditDoc.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { menuChange, getCourse } from '../../../actions';\nimport GoogleAuth from '../../GoogleAuth';\nimport FormCourse from './FormCourse';\nimport './CreateDoc.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditDoc extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = async formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.menuChange('courses');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CreateDoc\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleAuth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit  :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formCreateDoc\",\n        children: /*#__PURE__*/_jsxDEV(FormCourse, {\n          isSignedIn: this.props.isSignedIn,\n          onSubmit: this.onSubmit,\n          docId: this.props.match.params.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  menuChange,\n  getCourse\n})(EditDoc);","map":{"version":3,"sources":["/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/EditDoc.js"],"names":["React","connect","menuChange","getCourse","GoogleAuth","FormCourse","EditDoc","Component","onSubmit","formValues","console","log","componentDidMount","props","render","isSignedIn","match","params","id","mapStateToProps","state","ownProps","auth","userId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,kBAAP;;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAKlCC,QALkC,GAKvB,MAAOC,UAAP,IAAsB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,KAPiC;AAAA;;AAClCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWX,UAAX,CAAsB,SAAtB;AACH;;AAMDY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAAnC;AAA+C,UAAA,QAAQ,EAAE,KAAKP,QAA9D;AAAwE,UAAA,KAAK,EAAE,KAAKK,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC;AAAvG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAnBiC;;AAsBtC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAACN,IAAAA,UAAU,EAAGK,KAAK,CAACE,IAAN,CAAWP,UAAzB;AAAqCQ,IAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAAxD,GAAP;AACH,CAFD;;AAIA,eAAetB,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CAAkDG,OAAlD,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { menuChange, getCourse } from '../../../actions';\n\nimport GoogleAuth from '../../GoogleAuth';\nimport FormCourse from './FormCourse';\n\nimport './CreateDoc.scss';\n\nclass EditDoc extends React.Component {\n    componentDidMount() {\n        this.props.menuChange('courses');\n    }\n\n    onSubmit = async (formValues) => {\n        console.log(formValues);\n    }\n\n    render() {\n        return (\n            <div className=\"CreateDoc\">\n                <GoogleAuth />\n                <h1>Edit  :)</h1>\n                <div className=\"formCreateDoc\">\n                    <FormCourse isSignedIn={this.props.isSignedIn} onSubmit={this.onSubmit} docId={this.props.match.params.id} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {isSignedIn : state.auth.isSignedIn, userId: state.auth.userId};\n}\n\nexport default connect(mapStateToProps, {menuChange, getCourse})(EditDoc);"]},"metadata":{},"sourceType":"module"}