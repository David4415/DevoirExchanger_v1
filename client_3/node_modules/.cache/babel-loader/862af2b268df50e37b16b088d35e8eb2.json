{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/FormCourse.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { createDoc, editDoc, getCourse } from '../../../actions';\nimport history from '../../../history';\nimport './FormCourse.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormCourse extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      selectedFileURL: null\n    };\n\n    this.onSubmit = formValues => {\n      const previewDom = document.querySelector(\".previewDiv\");\n      const previewNoData = document.querySelector(\".previewNoData\");\n\n      if (this.state.selectedFile === null) {\n        previewNoData.style.color = \"red\";\n        previewDom.style.outline = \"3px solid red\";\n        previewDom.style.animation = \"flipAround 1s\";\n        previewNoData.innerHTML = `NO FILE CHOSEN`;\n      } else {\n        const {\n          selectedFile,\n          selectedFileURL\n        } = this.state;\n\n        if (!this.props.courseInfo) {\n          function pad2(n) {\n            return n < 10 ? '0' + n : n;\n          }\n\n          let date = new Date(Date.now());\n          date = date.getFullYear().toString() + pad2(date.getMonth() + 1) + pad2(date.getDate()) + pad2(date.getHours()) + pad2(date.getMinutes()) + pad2(date.getSeconds());\n          let type = selectedFile.type.match(/\\/.*/g)[0].slice(1);\n          if (selectedFile.type.slice(5) === \"image\") type = \"image\";else if (selectedFile.type.match(/\\/.*/g)[0].slice(1) === \"pdf\") type = \"pdf\";\n          if (!formValues.tags) formValues.tags = \"\";\n          console.log(selectedFile);\n          let formValuesAdd = { ...formValues,\n            URL: selectedFileURL,\n            type: type,\n            dateCreated: date,\n            image: \"https://cdn.pixabay.com/photo/2021/05/18/08/07/buildings-6262595_1280.jpg\",\n            creator: this.props.userId\n          };\n          this.props.createDoc(formValuesAdd);\n          this.props.onSubmit(formValuesAdd);\n        } else {\n          console.log(formValues);\n          this.props.onSubmit(formValues);\n        }\n\n        history.push('/courses');\n      }\n    };\n\n    this.onFileChange = async event => {\n      const file = event.target.files[0];\n      this.setState({\n        selectedFile: file\n      });\n      const previewImageDom = document.querySelector(\"#previewImage\");\n      const previewDom = document.querySelector(\".previewDiv\");\n      const previewNoData = document.querySelector(\".previewNoData\");\n      await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onloadend = e => {\n          let img = new Image();\n\n          img.onload = function () {\n            previewNoData.style.color = \"black\";\n            previewDom.style.outline = \"none\";\n            previewImageDom.style.backgroundImage = `url(\"${e.target.result}\")`;\n            previewImageDom.style.height = `${Math.ceil(200 * img.height / img.width)}px`;\n            previewImageDom.style.maxWidth = \"200px\";\n            previewImageDom.style.minWidth = \"200px\";\n            previewImageDom.style.backgroundSize = \"contain\";\n          };\n\n          img.src = e.target.result;\n          this.setState({\n            selectedFileURL: e.target.result\n          });\n        };\n\n        reader.readAsDataURL(file);\n      });\n    };\n\n    this.renderTitle = ({\n      input,\n      label,\n      meta\n    }) => {\n      const {\n        courseInfo\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          autoComplete: \"off\",\n          value: courseInfo ? courseInfo.titleDoc : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderTags = ({\n      input,\n      label,\n      meta\n    }) => {\n      const {\n        courseInfo\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          autoComplete: \"off\",\n          value: courseInfo ? courseInfo.tags : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderTextArea = ({\n      input,\n      label,\n      meta\n    }) => {\n      const {\n        courseInfo\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          value: courseInfo ? courseInfo.description : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderSelect = ({\n      input,\n      label,\n      meta\n    }) => {\n      const {\n        courseInfo\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"anglais\",\n            children: \"Anglais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fran\\xE7ais\",\n            children: \"Fran\\xE7ais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pc\",\n            children: \"Physique-Chimie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"math\",\n            children: \"Math\\xE9matiques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"geographie\",\n            children: \"G\\xE9ographie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"svt\",\n            children: \"SVT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"histoire\",\n            children: \"Histoire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.docId) this.props.getCourse(this.props.docId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.courseInfo && prevProps.courseInfo === undefined) {\n      this.setState({\n        selectedFile: true,\n        selectedFileURL: this.props.file\n      });\n    }\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMessage\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 38\n    }, this);\n  }\n\n  render() {\n    const {\n      courseInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"formCourse\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"title\",\n          children: \"Title \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"title\",\n          component: this.renderTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"description\",\n          children: \"Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          component: this.renderTextArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 88\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"tags\",\n          children: \"Tags \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"tags\",\n          component: this.renderTags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"matiere\",\n          children: \"Mati\\xE8re\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"matiere\",\n          className: \"form_item field\",\n          component: this.renderSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), !this.props.docId ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemCreate\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            htmlFor: \"file\",\n            children: \"Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"file\",\n            type: \"file\",\n            onChange: this.onFileChange,\n            className: \"uploadFile\",\n            accept: \".jpeg,.png,.jpg,application/pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemCreate\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_item field previewDiv\",\n            name: \"preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"previewImage\",\n              style: {\n                \"width\": \"200px\",\n                \"boxShadow\": \"1px 1px 10px black\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }, this), this.state.selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fichePreview\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: this.state.selectedFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Size:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 41\n                  }, this), \" \", this.state.selectedFile.size / 1000, \" Ko\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Last Modified:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 41\n                  }, this), \" \", `${this.state.selectedFile.lastModifiedDate}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"previewNoData\",\n              children: \"No data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSubmitCreateDoc\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n  if (!formValues.title) errors.title = 'You must enter a title';else if (formValues.title.length >= 10 && 50 <= formValues.title.length) errors.title = 'You must enter minimum 10 characters and maximum 50 characters';\n  if (!formValues.description) errors.description = 'You must enter a description';else if (formValues.description.length > 1000) errors.description = 'You must enter maximum 1000 characters';\n  if (!formValues.matiere) errors.matiere = 'Please choose a subject';\n  if (formValues.file === null) errors.file = 'Please choose a file';\n  console.log(errors);\n  return errors;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  if (state.cours.courseGetInfo) return {\n    courseInfo: state.cours.courseGetInfo[0][0],\n    file: state.cours.courseGetInfo[1]\n  };\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nconst FormCoursewithReduxForm = reduxForm({\n  form: 'DocumentForm',\n  validate\n})(FormCourse);\nexport default connect(mapStateToProps, {\n  createDoc,\n  getCourse\n})(FormCoursewithReduxForm);","map":{"version":3,"sources":["/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/FormCourse.js"],"names":["React","connect","Field","reduxForm","createDoc","editDoc","getCourse","history","FormCourse","Component","state","selectedFile","selectedFileURL","onSubmit","formValues","previewDom","document","querySelector","previewNoData","style","color","outline","animation","innerHTML","props","courseInfo","pad2","n","date","Date","now","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","type","match","slice","tags","console","log","formValuesAdd","URL","dateCreated","image","creator","userId","push","onFileChange","event","file","target","files","setState","previewImageDom","Promise","resolve","reject","reader","FileReader","onloadend","e","img","Image","onload","backgroundImage","result","height","Math","ceil","width","maxWidth","minWidth","backgroundSize","src","readAsDataURL","renderTitle","input","label","meta","error","touched","titleDoc","renderError","renderTags","renderTextArea","description","renderSelect","componentDidMount","docId","componentDidUpdate","prevProps","undefined","render","handleSubmit","name","size","lastModifiedDate","validate","errors","title","length","matiere","mapStateToProps","ownProps","cours","courseGetInfo","isSignedIn","auth","FormCoursewithReduxForm","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport {createDoc, editDoc,  getCourse} from '../../../actions';\nimport history from '../../../history';\n\nimport './FormCourse.scss';\n\nclass FormCourse extends React.Component {\n    state = { selectedFile: null, selectedFileURL: null };\n\n    componentDidMount() {\n        if (this.props.docId) this.props.getCourse(this.props.docId);\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.courseInfo && prevProps.courseInfo===undefined) {\n            this.setState({selectedFile: true, selectedFileURL : this.props.file});\n        }\n    }\n\n    onSubmit = (formValues) => {\n        const previewDom = document.querySelector(\".previewDiv\");\n        const previewNoData = document.querySelector(\".previewNoData\");\n\n        if (this.state.selectedFile === null) {\n            previewNoData.style.color = \"red\";\n            previewDom.style.outline = \"3px solid red\";\n            previewDom.style.animation = \"flipAround 1s\"\n            previewNoData.innerHTML = `NO FILE CHOSEN`\n        } else {\n            const {selectedFile, selectedFileURL} = this.state;\n            \n            if (!this.props.courseInfo) {\n                function pad2(n) { return n < 10 ? '0' + n : n }\n                let date = new Date(Date.now());\n                date = date.getFullYear().toString() + pad2(date.getMonth() + 1) + pad2( date.getDate()) + pad2( date.getHours() ) + pad2( date.getMinutes() ) + pad2( date.getSeconds() );\n\n                let type = selectedFile.type.match(/\\/.*/g)[0].slice(1);\n                if (selectedFile.type.slice(5)===\"image\") type = \"image\"\n                else if (selectedFile.type.match(/\\/.*/g)[0].slice(1) === \"pdf\") type = \"pdf\"\n                \n                if (!formValues.tags) formValues.tags = \"\";\n                console.log(selectedFile);\n                let formValuesAdd = {...formValues, \n                    URL: selectedFileURL, \n                    type: type,\n                    dateCreated: date,\n                    image: \"https://cdn.pixabay.com/photo/2021/05/18/08/07/buildings-6262595_1280.jpg\",\n                    creator: this.props.userId\n                };\n                this.props.createDoc(formValuesAdd);\n                this.props.onSubmit(formValuesAdd);\n            } else {\n                console.log(formValues);\n                this.props.onSubmit(formValues);\n            }\n\n            \n            history.push('/courses');\n        }\n    }\n\n    renderError({ error, touched }) {\n        if (touched && error) return <div className=\"errorMessage\">{error}</div>;\n    }\n\n    onFileChange = async (event) => {\n        const file = event.target.files[0];\n        this.setState({ selectedFile: file });\n        const previewImageDom = document.querySelector(\"#previewImage\");\n        const previewDom = document.querySelector(\".previewDiv\");\n        const previewNoData = document.querySelector(\".previewNoData\");\n\n        await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onloadend = (e) => {\n                let img = new Image;\n                img.onload = function() {\n                    previewNoData.style.color = \"black\";\n                    previewDom.style.outline = \"none\";\n                    previewImageDom.style.backgroundImage =  `url(\"${e.target.result}\")`;\n                    previewImageDom.style.height = `${Math.ceil((200*img.height)/img.width)}px`;\n                    previewImageDom.style.maxWidth = \"200px\";\n                    previewImageDom.style.minWidth = \"200px\";\n                    previewImageDom.style.backgroundSize = \"contain\";\n                };\n                img.src = e.target.result;\n                this.setState({selectedFileURL: e.target.result});\n            }\n            reader.readAsDataURL(file);\n        });\n    }\n\n    renderTitle = ({ input, label, meta }) => {\n        const {courseInfo} = this.props;\n        return (\n            <div>\n                <input className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} autoComplete=\"off\" \n                    value={courseInfo ? courseInfo.titleDoc : \"\"} /> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderTags = ({ input, label, meta }) => {\n        const {courseInfo} = this.props;\n        return (\n            <div>\n                <input className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} autoComplete=\"off\"\n                    value={courseInfo ? courseInfo.tags : \"\"}/> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderTextArea = ({ input, label, meta }) => {\n        const {courseInfo} = this.props;\n        return (\n            <div>\n                <textarea className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} \n                    value={courseInfo ? courseInfo.description : \"\"}/> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderSelect= ({ input, label, meta }) => {\n        const {courseInfo} = this.props;\n        return (\n            <div>\n                <select className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input}>\n                    <option></option>\n                    <option value=\"anglais\">Anglais</option>\n                    <option value=\"français\">Français</option>\n                    <option value=\"pc\">Physique-Chimie</option>\n                    <option value=\"math\">Mathématiques</option>\n                    <option value=\"geographie\">Géographie</option>\n                    <option value=\"svt\">SVT</option>\n                    <option value=\"histoire\">Histoire</option>\n                </select> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n\n    render() {\n        const {courseInfo} = this.props;\n\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"formCourse\">\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"title\">Title </label><Field name=\"title\" component={this.renderTitle}/>\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"description\">Description </label><Field name=\"description\" component={this.renderTextArea}/>\n                </div>\n                \n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"tags\">Tags </label><Field name=\"tags\" component={this.renderTags}/>\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"matiere\">Matière</label>\n                    <Field name=\"matiere\" className=\"form_item field\" component={this.renderSelect} />\n                </div>\n\n                { (!this.props.docId) \n        ? <React.Fragment>\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"file\">Course</label>\n                    <input name=\"file\" type=\"file\" onChange={this.onFileChange} className=\"uploadFile\" \n                        accept=\".jpeg,.png,.jpg,application/pdf\"/>\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\"> </label>\n                    <div className=\"form_item field previewDiv\" name=\"preview\">\n                        <div id=\"previewImage\" style={{\"width\": \"200px\", \"boxShadow\":\"1px 1px 10px black\"}} />\n                        {this.state.selectedFile \n                            ? <div className=\"fichePreview\">\n                                <h1>{this.state.selectedFile.name}</h1>\n                                <ul>\n                                    <li><strong>Size:</strong> {this.state.selectedFile.size/1000} Ko</li>\n                                    <li><strong>Last Modified:</strong> {`${this.state.selectedFile.lastModifiedDate}`}</li>\n                                </ul>\n                                </div> \n                            : <div className=\"previewNoData\">No data</div> }\n                    </div>\n                </div> \n        </React.Fragment>: \"\" }\n                \n                <button className=\"buttonSubmitCreateDoc\">Submit</button>\n            </form>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if (!formValues.title) errors.title = 'You must enter a title';\n    else if (formValues.title.length >= 10 && 50 <= formValues.title.length) errors.title = 'You must enter minimum 10 characters and maximum 50 characters';\n\n    if (!formValues.description) errors.description = 'You must enter a description';\n    else if (formValues.description.length > 1000) errors.description = 'You must enter maximum 1000 characters';\n\n    if (!formValues.matiere) errors.matiere = 'Please choose a subject';\n\n    if (formValues.file === null) errors.file = 'Please choose a file';\n\n    console.log(errors);\n    return errors;\n};\n\nconst mapStateToProps = (state, ownProps) => {  \n    if (state.cours.courseGetInfo) return {  courseInfo: state.cours.courseGetInfo[0][0], file: state.cours.courseGetInfo[1]   }\n    return {  isSignedIn : state.auth.isSignedIn };\n}\n\nconst FormCoursewithReduxForm = reduxForm({\n    form: 'DocumentForm',\n    validate\n})(FormCourse);\n\nexport default connect(mapStateToProps, {createDoc, getCourse})(FormCoursewithReduxForm);"]},"metadata":{},"sourceType":"module"}