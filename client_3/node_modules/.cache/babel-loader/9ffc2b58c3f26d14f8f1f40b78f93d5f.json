{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/Hubrium v_2 copie/client_3/src/components/Body/Routes/FormCourse.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { createDoc } from '../../../actions';\nimport history from '../../../history';\nimport './FormCourse.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormCourse extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      selectedFileURL: null\n    };\n\n    this.onSubmit = formValues => {\n      const previewDom = document.querySelector(\".previewDiv\");\n      const previewNoData = document.querySelector(\".previewNoData\");\n\n      if (this.state.selectedFile === null) {\n        previewNoData.style.color = \"red\";\n        previewDom.style.outline = \"3px solid red\";\n        previewDom.style.animation = \"flipAround 1s\";\n        previewNoData.innerHTML = `NO FILE CHOSEN`;\n      } else {\n        const {\n          selectedFile,\n          selectedFileURL\n        } = this.state;\n        let currentDate = new Date(Date.now());\n        let formValuesAdd = { ...formValues,\n          URL: selectedFileURL,\n          type: selectedFile.type.match(/\\/.*/g)[0].slice(1),\n          dateCreated: currentDate.toISOString(),\n          image: \"https://arxiv.org/pdf/2006.00556.pdf\",\n          creator: this.props.userId\n        };\n        this.props.createDoc(formValuesAdd);\n        this.props.onSubmit(formValuesAdd);\n        history.push('/courses');\n      }\n    };\n\n    this.onFileChange = async event => {\n      const file = event.target.files[0];\n      this.setState({\n        selectedFile: file\n      });\n      const previewImageDom = document.querySelector(\"#previewImage\");\n      const previewDom = document.querySelector(\".previewDiv\");\n      const previewNoData = document.querySelector(\".previewNoData\");\n      await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onloadend = e => {\n          let img = new Image();\n\n          img.onload = function () {\n            previewNoData.style.color = \"black\";\n            previewDom.style.outline = \"none\";\n            previewImageDom.style.backgroundImage = `url(\"${e.target.result}\")`;\n            previewImageDom.style.height = `${Math.ceil(200 * img.height / img.width)}px`;\n            previewImageDom.style.maxWidth = \"200px\";\n            previewImageDom.style.minWidth = \"200px\";\n            previewImageDom.style.backgroundSize = \"contain\";\n          };\n\n          img.src = e.target.result;\n          this.setState({\n            selectedFileURL: e.target.result\n          });\n        };\n\n        reader.readAsDataURL(file);\n      });\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderTextArea = ({\n      input,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderSelect = ({\n      input,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"anglais\",\n            children: \"Anglais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fran\\xE7ais\",\n            children: \"Fran\\xE7ais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pc\",\n            children: \"Physique-Chimie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"math\",\n            children: \"Math\\xE9matiques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"geographie\",\n            children: \"G\\xE9ographie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"svt\",\n            children: \"SVT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"histoire\",\n            children: \"Histoire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMessage\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 38\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"formCourse\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"title\",\n          children: \"Title \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"title\",\n          component: this.renderInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"description\",\n          children: \"Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          component: this.renderTextArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 88\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"tags\",\n          children: \"Tags \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"tags\",\n          component: this.renderInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"matiere\",\n          children: \"Mati\\xE8re\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"matiere\",\n          className: \"form_item field\",\n          component: this.renderSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"file\",\n          children: \"Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"file\",\n          type: \"file\",\n          onChange: this.onFileChange,\n          className: \"uploadFile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_item field previewDiv\",\n          name: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"previewImage\",\n            style: {\n              \"width\": \"200px\",\n              \"boxShadow\": \"1px 1px 10px black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), this.state.selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fichePreview\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: this.state.selectedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Size:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this), \" \", this.state.selectedFile.size / 1000, \" Ko\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Last Modified:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this), \" \", `${this.state.selectedFile.lastModifiedDate}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"previewNoData\",\n            children: \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSubmitCreateDoc\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n  if (!formValues.title) errors.title = 'You must enter a title';else if (formValues.title.length >= 10 && 50 <= formValues.title.length) errors.title = 'You must enter minimum 10 characters and maximum 50 characters';\n  if (!formValues.description) errors.description = 'You must enter a description';else if (formValues.description.length > 1000) errors.description = 'You must enter maximum 1000 characters';\n  if (!formValues.matiere) errors.matiere = 'Please choose a subject';\n  if (formValues.file === null) errors.file = 'Please choose a file';\n  console.log(errors);\n  return errors;\n};\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.userId\n  };\n};\n\nconst FormCoursewithReduxForm = reduxForm({\n  form: 'DocumentForm',\n  validate\n})(FormCourse);\nexport default connect(mapStateToProps, {\n  createDoc\n})(FormCoursewithReduxForm);","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2 copie/client_3/src/components/Body/Routes/FormCourse.js"],"names":["React","connect","Field","reduxForm","createDoc","history","FormCourse","Component","state","selectedFile","selectedFileURL","onSubmit","formValues","previewDom","document","querySelector","previewNoData","style","color","outline","animation","innerHTML","currentDate","Date","now","formValuesAdd","URL","type","match","slice","dateCreated","toISOString","image","creator","props","userId","push","onFileChange","event","file","target","files","setState","previewImageDom","Promise","resolve","reject","reader","FileReader","onloadend","e","img","Image","onload","backgroundImage","result","height","Math","ceil","width","maxWidth","minWidth","backgroundSize","src","readAsDataURL","renderInput","input","label","meta","error","touched","renderError","renderTextArea","renderSelect","render","handleSubmit","name","size","lastModifiedDate","validate","errors","title","length","description","matiere","console","log","mapStateToProps","auth","FormCoursewithReduxForm","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport {createDoc} from '../../../actions';\nimport history from '../../../history';\n\nimport './FormCourse.scss';\n\nclass FormCourse extends React.Component {\n    state = { selectedFile: null, selectedFileURL: null };\n\n    onSubmit = (formValues) => {\n        const previewDom = document.querySelector(\".previewDiv\");\n        const previewNoData = document.querySelector(\".previewNoData\");\n\n        if (this.state.selectedFile === null) {\n            previewNoData.style.color = \"red\";\n            previewDom.style.outline = \"3px solid red\";\n            previewDom.style.animation = \"flipAround 1s\"\n            previewNoData.innerHTML = `NO FILE CHOSEN`\n        } else {\n            const {selectedFile, selectedFileURL} = this.state;\n            let currentDate = new Date(Date.now());\n            \n            \n            let formValuesAdd = {...formValues, \n                URL: selectedFileURL, \n                type: selectedFile.type.match(/\\/.*/g)[0].slice(1),\n                dateCreated: currentDate.toISOString(),\n                image: \"https://arxiv.org/pdf/2006.00556.pdf\",\n                creator: this.props.userId\n            };\n\n            this.props.createDoc(formValuesAdd);\n            this.props.onSubmit(formValuesAdd);\n            history.push('/courses');\n        }\n    }\n\n    renderError({ error, touched }) {\n        if (touched && error) return <div className=\"errorMessage\">{error}</div>;\n    }\n\n    onFileChange = async (event) => {\n        const file = event.target.files[0];\n        this.setState({ selectedFile: file });\n        const previewImageDom = document.querySelector(\"#previewImage\");\n        const previewDom = document.querySelector(\".previewDiv\");\n        const previewNoData = document.querySelector(\".previewNoData\");\n\n        await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onloadend = (e) => {\n                let img = new Image;\n                img.onload = function() {\n                    previewNoData.style.color = \"black\";\n                    previewDom.style.outline = \"none\";\n                    previewImageDom.style.backgroundImage =  `url(\"${e.target.result}\")`;\n                    previewImageDom.style.height = `${Math.ceil((200*img.height)/img.width)}px`;\n                    previewImageDom.style.maxWidth = \"200px\";\n                    previewImageDom.style.minWidth = \"200px\";\n                    previewImageDom.style.backgroundSize = \"contain\";\n                };\n                img.src = e.target.result;\n                this.setState({selectedFileURL: e.target.result});\n            }\n            reader.readAsDataURL(file);\n        });\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        return (\n            <div>\n                <input className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} autoComplete=\"off\" /> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderTextArea = ({ input, label, meta }) => {\n        return (\n            <div>\n                <textarea className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} /> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderSelect= ({ input, label, meta }) => {\n        return (\n            <div>\n                <select className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input}>\n                    <option></option>\n                    <option value=\"anglais\">Anglais</option>\n                    <option value=\"français\">Français</option>\n                    <option value=\"pc\">Physique-Chimie</option>\n                    <option value=\"math\">Mathématiques</option>\n                    <option value=\"geographie\">Géographie</option>\n                    <option value=\"svt\">SVT</option>\n                    <option value=\"histoire\">Histoire</option>\n                </select> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"formCourse\">\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"title\">Title </label><Field name=\"title\" component={this.renderInput}/>\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"description\">Description </label><Field name=\"description\" component={this.renderTextArea}/>\n                </div>\n                \n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"tags\">Tags </label><Field name=\"tags\" component={this.renderInput}/>\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"matiere\">Matière</label>\n                    <Field name=\"matiere\" className=\"form_item field\" component={this.renderSelect} />\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"file\">Course</label>\n                    <input name=\"file\" type=\"file\" onChange={this.onFileChange} className=\"uploadFile\"/>\n                </div>\n\n                \n                <div className=\"itemCreate\">\n                    <label className=\"label\"> </label>\n                    <div className=\"form_item field previewDiv\" name=\"preview\">\n                        <div id=\"previewImage\" style={{\"width\": \"200px\", \"boxShadow\":\"1px 1px 10px black\"}} />\n                        {this.state.selectedFile \n                            ? <div className=\"fichePreview\">\n                                <h1>{this.state.selectedFile.name}</h1>\n                                <ul>\n                                    <li><strong>Size:</strong> {this.state.selectedFile.size/1000} Ko</li>\n                                    <li><strong>Last Modified:</strong> {`${this.state.selectedFile.lastModifiedDate}`}</li>\n                                </ul>\n                                </div> \n                            : <div className=\"previewNoData\">No data</div> }\n                    </div>\n                </div>\n                \n                <button className=\"buttonSubmitCreateDoc\">Submit</button>\n            </form>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if (!formValues.title) errors.title = 'You must enter a title';\n    else if (formValues.title.length >= 10 && 50 <= formValues.title.length) errors.title = 'You must enter minimum 10 characters and maximum 50 characters';\n\n    if (!formValues.description) errors.description = 'You must enter a description';\n    else if (formValues.description.length > 1000) errors.description = 'You must enter maximum 1000 characters';\n\n    if (!formValues.matiere) errors.matiere = 'Please choose a subject';\n\n    if (formValues.file === null) errors.file = 'Please choose a file';\n\n    console.log(errors);\n    return errors;\n};\n\nconst mapStateToProps = (state) => {\n    return {  userId: state.auth.userId };\n}\n\nconst FormCoursewithReduxForm = reduxForm({\n    form: 'DocumentForm',\n    validate\n})(FormCourse);\n\nexport default connect(mapStateToProps, {createDoc})(FormCoursewithReduxForm);"]},"metadata":{},"sourceType":"module"}