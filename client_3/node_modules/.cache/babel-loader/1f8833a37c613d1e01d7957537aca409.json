{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/Hubrium v_2 copie/client_3/src/components/Body/Routes/CreateDoc.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { menuChange } from '../../../actions';\nimport GoogleAuth from '../../GoogleAuth';\nimport FormCourse from './FormCourse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateDoc extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = async formValues => {\n      console.log(ormValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.menuChange('courses');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GoogleAuth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormCourse, {\n        isSignedIn: this.props.isSignedIn,\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  menuChange\n})(CreateDoc);","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2 copie/client_3/src/components/Body/Routes/CreateDoc.js"],"names":["React","connect","menuChange","GoogleAuth","FormCourse","CreateDoc","Component","onSubmit","formValues","console","log","ormValues","componentDidMount","props","render","isSignedIn","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAKpCC,QALoC,GAKzB,MAAOC,UAAP,IAAsB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACH,KAPmC;AAAA;;AACpCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWX,UAAX,CAAsB,SAAtB;AACH;;AAMDY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAAnC;AAA+C,QAAA,QAAQ,EAAE,KAAKR;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAhBmC;;AAmBxC,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAGF,IAAAA,UAAU,EAAGE,KAAK,CAACC,IAAN,CAAWH;AAA3B,GAAP;AACH,CAFD;;AAIA,eAAed,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAAuCG,SAAvC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { menuChange } from '../../../actions';\n\nimport GoogleAuth from '../../GoogleAuth';\nimport FormCourse from './FormCourse';\n\nclass CreateDoc extends React.Component {\n    componentDidMount() {\n        this.props.menuChange('courses');\n    }\n\n    onSubmit = async (formValues) => {\n        console.log(ormValues);\n    }\n\n    render() {\n        return (\n            <div>\n                <GoogleAuth />\n                <FormCourse isSignedIn={this.props.isSignedIn} onSubmit={this.onSubmit} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {  isSignedIn : state.auth.isSignedIn  }\n}\n\nexport default connect(mapStateToProps, {menuChange})(CreateDoc);"]},"metadata":{},"sourceType":"module"}