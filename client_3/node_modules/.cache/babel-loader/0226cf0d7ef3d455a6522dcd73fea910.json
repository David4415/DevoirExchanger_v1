{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/FormForum.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormForum extends React.Component {\n  renderTitle({\n    input,\n    label,\n    meta\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n        ...input,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this); //{this.renderError(meta)}\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"formCourse\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"title\",\n          children: \"Title \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"title\",\n          component: this.renderTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nconst FormForumwithReduxForm = reduxForm({\n  form: 'ForumForm'\n})(FormForum);\nexport default connect(mapStateToProps, {})(FormForumwithReduxForm);","map":{"version":3,"sources":["/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/FormForum.js"],"names":["React","connect","Field","reduxForm","FormForum","Component","renderTitle","input","label","meta","error","touched","render","props","handleSubmit","onSubmit","mapStateToProps","state","ownProps","isSignedIn","auth","FormForumwithReduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAD,EAAyB;AAChC,wBACI;AAAA,6BACI;AAAO,QAAA,SAAS,EAAG,aAAYA,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACE,OAAnB,GAA6B,OAA7B,GAAuC,EAAG,EAAzE;AAAA,WAAgFJ,KAAhF;AAAuF,QAAA,YAAY,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,CADgC,CAMhC;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKC,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,YAAlE;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAyB,UAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAC2D,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAE,KAAKT;AAApC;AAAA;AAAA;AAAA;AAAA,gBAD3D;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAlBmC;;AAqBxC,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAACC,IAAAA,UAAU,EAAGF,KAAK,CAACG,IAAN,CAAWD;AAAzB,GAAP;AACH,CAFD;;AAIA,MAAME,sBAAsB,GAAGlB,SAAS,CAAC;AACrCmB,EAAAA,IAAI,EAAE;AAD+B,CAAD,CAAT,CAE5BlB,SAF4B,CAA/B;AAIA,eAAeH,OAAO,CAACe,eAAD,EAAkB,EAAlB,CAAP,CAA6BK,sBAA7B,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\n\nclass FormForum extends React.Component {\n    renderTitle({ input, label, meta }) {\n        return (\n            <div>\n                <input className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} autoComplete=\"off\" /> \n            </div>\n        );\n        //{this.renderError(meta)}\n    }\n    \n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"formCourse\">\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"title\">Title </label><Field name=\"title\" component={this.renderTitle}/>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {isSignedIn : state.auth.isSignedIn };\n}\n\nconst FormForumwithReduxForm = reduxForm({\n    form: 'ForumForm'\n})(FormForum);\n\nexport default connect(mapStateToProps, {})(FormForumwithReduxForm);"]},"metadata":{},"sourceType":"module"}