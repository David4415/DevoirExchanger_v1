{"ast":null,"code":"import server from '../apis/server';\nexport const menuChange = to => {\n  return {\n    type: 'ON_MENU_CHANGE',\n    payload: to\n  };\n};\nexport const signIn = userInfo => async dispatch => {\n  // get info from data base\n  const response = await server.get(`/getUserInfo/${userInfo.getId()}`);\n  dispatch({\n    type: 'SIGN_IN',\n    payload: {\n      id: userInfo.getId(),\n      info: response.data[0]\n    }\n  });\n};\nexport const signOut = () => {\n  return {\n    type: 'SIGN_OUT'\n  };\n};\nexport const getCoursesFrom = userId => async dispatch => {\n  const response = await server.get(`/getCourseUserId/${userId}`);\n  dispatch({\n    type: 'GET_COURSE_FROM_ID',\n    payload: response.data\n  });\n};\nexport const getCourses = (query, more = \"\", userId = \"\") => async dispatch => {\n  let querySent = '';\n  console.log(query, more);\n\n  switch (query) {\n    case 'month_2':\n      querySent = 'month_2';\n      break;\n\n    case \"sixMonth_2\":\n      querySent = '6month_2';\n      break;\n\n    case \"year_2\":\n      querySent = 'year_2';\n      break;\n\n    case \"threeYear_2\":\n      querySent = '3year_2';\n      break;\n\n    case \"pdf\":\n      querySent = 'pdf';\n      break;\n\n    case \"text\":\n      querySent = 'text';\n      break;\n\n    case \"image\":\n      querySent = 'image';\n      break;\n\n    case \"mostViews\":\n      querySent = `mostViews&search=${more}`;\n      break;\n\n    case \"mostLikes\":\n      querySent = `mostLikes&search=${more}`;\n      break;\n\n    case \"mostPins\":\n      querySent = `mostPins&search=${more}`;\n      break;\n\n    case \"search\":\n      querySent = `searchQuery&search=${more}`;\n      break;\n\n    case \"math\":\n      querySent = `${query}`;\n      break;\n\n    case \"histoire\":\n      querySent = `${query}`;\n      break;\n\n    case \"geographie\":\n      querySent = `${query}`;\n      break;\n  }\n\n  if (userId !== \"\") querySent += `&userId=${userId}`;\n  const response = await server.get(`/getCourses?filter=${querySent}`);\n  dispatch({\n    type: 'GET_COURSES',\n    payload: response.data\n  });\n};\nexport const getCourse = id => async dispatch => {\n  const response = await server.get(`/getCourse/${id}`);\n  dispatch({\n    type: 'GET_COURSE',\n    payload: response.data\n  });\n};\nexport const likedContent = (docId, like, creatorId) => async dispatch => {\n  const response = await server.get(`/likedContent/${docId}?like=${like}&creatorId=${creatorId}`);\n};\nexport const viewContent = (docId, creatorId) => async dispatch => {\n  const response = await server.get(`/viewContent/${docId}?creatorId=${creatorId}`);\n};","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2/client/src/actions/index.js"],"names":["server","menuChange","to","type","payload","signIn","userInfo","dispatch","response","get","getId","id","info","data","signOut","getCoursesFrom","userId","getCourses","query","more","querySent","console","log","getCourse","likedContent","docId","like","creatorId","viewContent"],"mappings":"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","sourcesContent":["import server from '../apis/server';\n\nexport const menuChange = (to) => {\n    return { type: 'ON_MENU_CHANGE', payload: to};\n};\n\n\nexport const signIn = (userInfo) => async (dispatch) => {\n    // get info from data base\n    const response = await server.get(`/getUserInfo/${userInfo.getId()}`);\n    dispatch({ type: 'SIGN_IN', payload: {id: userInfo.getId(), info: response.data[0]}});\n};\nexport const signOut = () => {\n    return { type: 'SIGN_OUT' }\n};\n\nexport const getCoursesFrom = (userId) => async (dispatch) => {\n    const response = await server.get(`/getCourseUserId/${userId}`);\n    dispatch({ type:'GET_COURSE_FROM_ID', payload: response.data });\n};\n\nexport const getCourses = (query, more=\"\", userId=\"\") => async (dispatch) => {\n    let querySent = '';\n    console.log(query, more);\n    switch (query) {\n        case 'month_2': querySent = 'month_2'; break\n        case \"sixMonth_2\": querySent ='6month_2'; break\n        case \"year_2\": querySent ='year_2'; break\n        case \"threeYear_2\": querySent ='3year_2'; break\n        case \"pdf\": querySent = 'pdf'; break\n\t\tcase \"text\": querySent = 'text'; break\n\t\tcase \"image\": querySent = 'image'; break\n        case \"mostViews\": querySent = `mostViews&search=${more}`; break\n        case \"mostLikes\": querySent = `mostLikes&search=${more}`; break\n        case \"mostPins\": querySent = `mostPins&search=${more}`; break\n        case \"search\": querySent = `searchQuery&search=${more}`;break\n\n        case \"math\": querySent = `${query}`;break\n        case \"histoire\": querySent = `${query}`;break\n        case \"geographie\": querySent = `${query}`;break\n    }\n    if (userId !== \"\") querySent += `&userId=${userId}`;\n\n    const response = await server.get(`/getCourses?filter=${querySent}`);\n\n    dispatch({ type:'GET_COURSES', payload: response.data });\n};\n\nexport const getCourse = (id) => async (dispatch) => {\n    const response = await server.get(`/getCourse/${id}`);\n    dispatch({ type:'GET_COURSE', payload: response.data })\n}\n\nexport const likedContent = (docId, like, creatorId) => async (dispatch) => {\n    const response = await server.get(`/likedContent/${docId}?like=${like}&creatorId=${creatorId}`);\n}\n\nexport const viewContent = (docId, creatorId) => async (dispatch) => {\n    const response = await server.get(`/viewContent/${docId}?creatorId=${creatorId}`);\n}\n"]},"metadata":{},"sourceType":"module"}