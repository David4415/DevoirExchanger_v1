{"ast":null,"code":"import _classCallCheck from\"/Users/Programmation/Documents/Hubrium v_2/client_3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Programmation/Documents/Hubrium v_2/client_3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Programmation/Documents/Hubrium v_2/client_3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Programmation/Documents/Hubrium v_2/client_3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{menuChange,getCoursesFrom,getBadges,getBadgesUser,getBadgesUserTypes}from'../../../actions';import eye_icon from'../../eye_logo.png';import GoogleAuth from'../../GoogleAuth';import like_icon from'../../like.jpeg';import'./Statistics.scss';import'./Badges.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Statistics=/*#__PURE__*/function(_React$Component){_inherits(Statistics,_React$Component);var _super=_createSuper(Statistics);function Statistics(){var _this;_classCallCheck(this,Statistics);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeButton:1,showCourse:3,badgeOnlyEarned:false};_this.onStatsButtonChange=function(num){_this.setState({activeButton:num});};_this.onLoadMoreButtonChange=function(){_this.setState({showCourse:_this.state.showCourse*2});};return _this;}_createClass(Statistics,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.menuChange('statistics');this.props.getBadges();switch(this.props.match.params.where){case\"courses\":this.setState({activeButton:2});case\"forum\":this.setState({activeButton:3});case\"hall_of_frame\":this.setState({activeButton:4});case\"profile\":this.setState({activeButton:1});}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.props.userId&&!this.props.myCourses)this.props.getCoursesFrom(this.props.userId);if(this.props.userId&&!this.props.myBadges)this.props.getBadgesUser(this.props.userId);if(this.props.userId&&!this.props.myBadgesPerType)this.props.getBadgesUserTypes(this.props.userId);}},{key:\"renderCoursesList\",value:function renderCoursesList(){if(!this.props.myCourses)return null;return this.props.myCourses.slice(0,this.state.showCourse).map(function(course){return/*#__PURE__*/_jsxs(\"div\",{className:\"stats_profile_courseItem\",onClick:function onClick(){return console.log(\"Edit \",course.id);},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:course.image,height:\"80px\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_profile_courseItem_left\",children:[/*#__PURE__*/_jsx(\"h3\",{children:course.titleDoc}),/*#__PURE__*/_jsx(\"div\",{className:\"stats_profile_courseItem_tags\",children:course.tags.split(\"#\").slice(1,4).map(function(tag){return/*#__PURE__*/_jsx(\"span\",{children:'#'+tag},tag);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_profile_courseItem_right\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:eye_icon,width:\"14px\",height:\"7px\"}),\"\\xA0\\xA0\",course.viewed]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:like_icon,width:\"10px\",height:\"10px\"}),\"\\xA0\\xA0\",course.liked]})]})]},course.id);});}},{key:\"renderProfile\",value:function renderProfile(){var userInfo=this.props.userInfo;if(!this.props.myCourses||!this.props.myBadgesPerType)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"stats_profile\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{className:\"stats_profileImag\",src:userInfo.profileImage,width:\"200px\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_infosProfile\",children:[/*#__PURE__*/_jsx(\"h4\",{children:userInfo.firstName+\" \"+userInfo.lastName}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_infos_container\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Classe: \"}),userInfo.classe]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\xC9tude: \"}),userInfo.lieuEtude]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Connection: \"}),userInfo.lieuEtude]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Emplacement: \"}),userInfo.location]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_badgesProfile\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Badges\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"dot dot_bronze\"}),\" \",/*#__PURE__*/_jsx(\"strong\",{children:this.props.myBadgesPerType[0]}),\" Bronze\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"dot dot_argent\"}),\" \",/*#__PURE__*/_jsx(\"strong\",{children:this.props.myBadgesPerType[1]}),\" Argent\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"dot dot_gold\"}),\" \",/*#__PURE__*/_jsx(\"strong\",{children:this.props.myBadgesPerType[2]}),\" or\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"dot dot_diamond\"}),\" \",/*#__PURE__*/_jsx(\"strong\",{children:this.props.myBadgesPerType[3]}),\" Diamant\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_profile_center\",children:[/*#__PURE__*/_jsx(\"h1\",{children:userInfo.userName}),/*#__PURE__*/_jsx(\"p\",{className:\"stats_profile_biography\",children:userInfo.biography}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Cours post\\xE9s : \",this.props.myCourses.length]}),this.renderCoursesList(),/*#__PURE__*/_jsx(\"p\",{onClick:this.onLoadMoreButtonChange,className:\"stats_profile_courses_loadmore\",children:\"Load more...\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats_profile_profStats\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Profile Statistics\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2660 \",/*#__PURE__*/_jsx(\"strong\",{children:userInfo.profileView}),\" people have viewed your profile\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_profile_courseStats\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Courses\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:userInfo.courseViews}),\" Total number of views\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:userInfo.courseLikes}),\" Total number of likes\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:userInfo.coursePins}),\" Total number of pins\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_profile_forumStats\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Forum\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2660 \",/*#__PURE__*/_jsx(\"strong\",{children:userInfo.profileView}),\" people have viewed your profile\"]})]})]})]});}},{key:\"renderHallOfFrame\",value:function renderHallOfFrame(){var _this2=this;if(!this.props.myBadges)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"badgesContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"badgesQuery\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"element element_left \".concat(!this.state.badgeOnlyEarned?\"active\":\"\"),onClick:function onClick(){return _this2.setState({badgeOnlyEarned:false});},children:\"All\"}),/*#__PURE__*/_jsx(\"span\",{className:\"element element_right \".concat(this.state.badgeOnlyEarned?\"active\":\"\"),onClick:function onClick(){return _this2.setState({badgeOnlyEarned:true});},children:\"Only Earned\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"AllBadges\",children:this.props.allBadges.map(function(badge){var splited=badge.badgeName.split(\" \");var statusBadges=null;switch(splited[splited.length-1]){case'I':statusBadges='bronze';break;case'II':statusBadges='silver';break;case'III':statusBadges='gold';break;case'IV':statusBadges='diamond';break;default:statusBadges=null;}var found=false;for(var i=0;i<_this2.props.myBadges.length;i++){if(_this2.props.myBadges[i].badgesId===badge.id){found=true;break;}}if(_this2.state.badgeOnlyEarned&&!found)return\"\";return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"badgeItem \".concat(statusBadges,\" \").concat(found?\"haveBadge\":\"\"),children:[/*#__PURE__*/_jsx(\"h5\",{children:badge.badgeName}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:badge.quantite}),\"  \",badge.description]})]}),statusBadges==='diamond'?/*#__PURE__*/_jsx(\"br\",{}):\"\"]},badge.id);})})]});}},{key:\"renderStats\",value:function renderStats(){switch(this.state.activeButton){case 1:return this.renderProfile();case 2:return/*#__PURE__*/_jsx(\"div\",{children:\"2\"});case 3:return/*#__PURE__*/_jsx(\"div\",{children:\"3\"});case 4:return this.renderHallOfFrame();}}},{key:\"render\",value:function render(){var _this3=this;console.log(this.props.userId);if(!this.props.userInfo)return/*#__PURE__*/_jsx(GoogleAuth,{});return/*#__PURE__*/_jsxs(\"div\",{className:\"Statistics\",children:[/*#__PURE__*/_jsx(GoogleAuth,{}),/*#__PURE__*/_jsx(\"div\",{className:\"join\",children:/*#__PURE__*/_jsx(\"img\",{className:\"profileImage\",src:this.props.userInfo.profileImage,width:\"40px\",height:\"40px\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_button_cont\",children:[/*#__PURE__*/_jsx(\"button\",{className:this.state.activeButton===1?'active':'',onClick:function onClick(){return _this3.onStatsButtonChange(1);},children:\"Profile\"}),/*#__PURE__*/_jsx(\"button\",{className:this.state.activeButton===4?'active':'',onClick:function onClick(){return _this3.onStatsButtonChange(4);},children:\"Hall of Frame\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"statsShow\",children:this.renderStats()})]});}}]);return Statistics;}(React.Component);;var mapStateToProps=function mapStateToProps(state){return{isSignedIn:state.auth.isSignedIn,userId:state.auth.userId,userInfo:state.auth.userInfo,myCourses:state.auth.courses,allBadges:state.auth.badges,myBadges:state.auth.myBadges,myBadgesPerType:state.auth.myBadgesPerType};};export default connect(mapStateToProps,{menuChange:menuChange,getCoursesFrom:getCoursesFrom,getBadges:getBadges,getBadgesUser:getBadgesUser,getBadgesUserTypes:getBadgesUserTypes})(Statistics);","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2/client_3/src/components/Body/Routes/Statistics.js"],"names":["React","connect","menuChange","getCoursesFrom","getBadges","getBadgesUser","getBadgesUserTypes","eye_icon","GoogleAuth","like_icon","Statistics","state","activeButton","showCourse","badgeOnlyEarned","onStatsButtonChange","num","setState","onLoadMoreButtonChange","props","match","params","where","userId","myCourses","myBadges","myBadgesPerType","slice","map","course","console","log","id","image","titleDoc","tags","split","tag","viewed","liked","userInfo","profileImage","firstName","lastName","classe","lieuEtude","location","userName","biography","length","renderCoursesList","profileView","courseViews","courseLikes","coursePins","allBadges","badge","splited","badgeName","statusBadges","found","i","badgesId","quantite","description","renderProfile","renderHallOfFrame","renderStats","Component","mapStateToProps","isSignedIn","auth","courses","badges"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { menuChange, getCoursesFrom, getBadges, getBadgesUser, getBadgesUserTypes } from '../../../actions';\nimport eye_icon from '../../eye_logo.png';\nimport GoogleAuth from '../../GoogleAuth';\nimport like_icon from '../../like.jpeg';\n\nimport './Statistics.scss';\nimport './Badges.scss';\n\nclass Statistics extends React.Component {\n    state = { activeButton:1, showCourse: 3, badgeOnlyEarned: false }\n    componentDidMount() {\n        this.props.menuChange('statistics');\n        this.props.getBadges();\n        \n        switch (this.props.match.params.where) {\n            case \"courses\": this.setState({activeButton:2});\n            case \"forum\": this.setState({activeButton:3});\n            case \"hall_of_frame\": this.setState({activeButton:4});\n            case \"profile\": this.setState({activeButton:1});\n        }\n    }\n    componentDidUpdate() {\n        if (this.props.userId && !this.props.myCourses) this.props.getCoursesFrom(this.props.userId);\n        if (this.props.userId && !this.props.myBadges) this.props.getBadgesUser(this.props.userId);\n        if (this.props.userId && !this.props.myBadgesPerType) this.props.getBadgesUserTypes(this.props.userId);\n    }\n\n    onStatsButtonChange = (num) => {\n        this.setState({activeButton:num})\n    }\n    onLoadMoreButtonChange = () => {\n        this.setState({showCourse: this.state.showCourse*2});\n    }\n\n    renderCoursesList() {\n        if (!this.props.myCourses) return null;\n\n        return this.props.myCourses.slice(0, this.state.showCourse).map((course)=>{\n            return (\n                <div key={course.id} className=\"stats_profile_courseItem\" onClick={() => console.log(\"Edit \", course.id)}>\n                    <div>\n                        <img src={course.image} height=\"80px\" />\n                        <div className=\"stats_profile_courseItem_left\">\n                            <h3>{course.titleDoc}</h3>\n                            <div className=\"stats_profile_courseItem_tags\">{course.tags.split(\"#\").slice(1, 4).map((tag)=><span key={tag}>{'#'+tag}</span>)}</div>\n                        </div>\n                    </div>\n                    <div className=\"stats_profile_courseItem_right\">\n                        <div><img src={eye_icon} width=\"14px\" height=\"7px\"/>&nbsp;&nbsp;{course.viewed}</div>\n                        <div><img src={like_icon} width=\"10px\" height=\"10px\"/>&nbsp;&nbsp;{course.liked}</div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    renderProfile() {\n        const { userInfo } = this.props;\n        if (!this.props.myCourses || !this.props.myBadgesPerType) return null;\n\n        return (\n            <div className=\"stats_profile\">\n                <div>\n                    <img className=\"stats_profileImag\" src={userInfo.profileImage} width=\"200px\" />\n                    <div className=\"stats_infosProfile\">\n                        <h4>{userInfo.firstName + \" \" + userInfo.lastName}</h4>\n                        <div className=\"stats_infos_container\">\n                            <p><strong>Classe: </strong>{userInfo.classe}</p>\n                            <p><strong>Étude: </strong>{userInfo.lieuEtude}</p>\n                            <p><strong>Connection: </strong>{userInfo.lieuEtude}</p>\n                            <p><strong>Emplacement: </strong>{userInfo.location}</p>\n                        </div>\n                    </div>\n                    <div className=\"stats_badgesProfile\">\n                        <h4>Badges</h4>\n                        <div>\n                            <p><span className=\"dot dot_bronze\"/> <strong>{this.props.myBadgesPerType[0]}</strong> Bronze</p>\n                            <p><span className=\"dot dot_argent\"/> <strong>{this.props.myBadgesPerType[1]}</strong> Argent</p>\n                            <p><span className=\"dot dot_gold\"/> <strong>{this.props.myBadgesPerType[2]}</strong> or</p>\n                            <p><span className=\"dot dot_diamond\"/> <strong>{this.props.myBadgesPerType[3]}</strong> Diamant</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"stats_profile_center\">\n                    <h1>{userInfo.userName}</h1>\n                    <p className=\"stats_profile_biography\">{userInfo.biography}</p>\n                    <div>\n                        <h3>Cours postés : {this.props.myCourses.length}</h3>\n                        {this.renderCoursesList()}\n                        <p onClick={this.onLoadMoreButtonChange} className=\"stats_profile_courses_loadmore\">Load more...</p>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"stats_profile_profStats\">\n                        <h4>Profile Statistics</h4>\n                        <p>&spades; <strong>{userInfo.profileView}</strong> people have viewed your profile</p>\n                    </div>\n                    <div className=\"stats_profile_courseStats\">\n                        <h4>Courses</h4>\n                        <p><strong>{userInfo.courseViews}</strong> Total number of views</p>\n                        <p><strong>{userInfo.courseLikes}</strong> Total number of likes</p>\n                        <p><strong>{userInfo.coursePins}</strong> Total number of pins</p>\n                    </div>\n                    <div className=\"stats_profile_forumStats\">\n                        <h4>Forum</h4>\n                        <p>&spades; <strong>{userInfo.profileView}</strong> people have viewed your profile</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderHallOfFrame() {\n        if (!this.props.myBadges) return null;\n        return (\n            <div className=\"badgesContainer\">\n                <div className=\"badgesQuery\">\n                    <span className={`element element_left ${!this.state.badgeOnlyEarned ? \"active\" : \"\"}`} onClick={() => this.setState({badgeOnlyEarned: false})}>All</span>\n                    <span className={`element element_right ${this.state.badgeOnlyEarned ? \"active\" : \"\"}`} onClick={() => this.setState({badgeOnlyEarned: true})}>Only Earned</span>\n                </div>\n                <div className=\"AllBadges\">   \n                    {this.props.allBadges.map((badge)=> {\n                        const splited = badge.badgeName.split(\" \");\n                        let statusBadges = null;\n                        switch (splited[splited.length-1]) {\n                            case 'I': statusBadges = 'bronze'; break\n                            case 'II': statusBadges = 'silver'; break\n                            case 'III': statusBadges = 'gold'; break\n                            case 'IV': statusBadges = 'diamond'; break\n                            default: statusBadges = null;\n                        }\n\n                        let found = false;\n                        for(let i = 0; i < this.props.myBadges.length; i++) {\n                            if (this.props.myBadges[i].badgesId === badge.id) {\n                                found = true;\n                                break;\n                            }\n                        }\n                        if (this.state.badgeOnlyEarned && !found) return \"\";\n\n                        return (\n                            <React.Fragment key={badge.id}>\n                                <div className={`badgeItem ${statusBadges} ${found ? \"haveBadge\" : \"\"}`}>\n                                    <h5>{badge.badgeName}</h5>\n                                    <p><strong>{badge.quantite}</strong>  {badge.description}</p>\n                                </div>\n                                {statusBadges==='diamond' ? <br /> : \"\"}\n                            </React.Fragment>\n                        );})\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    renderStats() {\n        switch (this.state.activeButton) {\n            case 1: return this.renderProfile();\n            case 2: return <div>2</div>\n            case 3: return <div>3</div>\n            case 4: return this.renderHallOfFrame();\n        }\n    }\n\n    render() {\n        console.log(this.props.userId);\n        if (!this.props.userInfo) return <GoogleAuth />;\n        \n        return (\n            <div className=\"Statistics\">\n                <GoogleAuth />\n                <div className=\"join\">\n                    <img className=\"profileImage\" src={this.props.userInfo.profileImage} width=\"40px\" height=\"40px\"/>\n                </div>\n                <div className=\"stats_button_cont\">\n                    <button className={this.state.activeButton===1 ? 'active' : ''} onClick={() => this.onStatsButtonChange(1)}>Profile</button>\n                    {/*<button className={this.state.activeButton===2 ? 'active' : ''} onClick={() =>this.onStatsButtonChange(2)}>Courses</button>*/}\n                    {/*<button className={this.state.activeButton===3 ? 'active' : ''} onClick={() =>this.onStatsButtonChange(3)}>Forum</button>*/}\n                    <button className={this.state.activeButton===4 ? 'active' : ''} onClick={() =>this.onStatsButtonChange(4)}>Hall of Frame</button>\n                </div>\n                <div className=\"statsShow\">\n                    {this.renderStats()}\n                </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {  isSignedIn : state.auth.isSignedIn, userId: state.auth.userId, userInfo: state.auth.userInfo, myCourses:state.auth.courses, allBadges:state.auth.badges, myBadges: state.auth.myBadges, myBadgesPerType: state.auth.myBadgesPerType };\n}\n\nexport default connect(mapStateToProps, {menuChange,getCoursesFrom,getBadges, getBadgesUser, getBadgesUserTypes})(Statistics);"]},"metadata":{},"sourceType":"module"}