{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/Forums.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ForumsElements from './ForumsElements';\nimport QueryButton from './QueryButton';\nimport { menuChange, getForums, likedForum } from '../../../actions';\nimport './Forums.scss';\nimport search_icon from '../../Header/header_image/search.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Forums extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      liked: null\n    };\n\n    this.onSearchButtonClick = e => {\n      //this.onElementClick(`SEARCH_${this.myRef.current.value}`);\n      this.myRef.current.blur();\n    };\n\n    this.onElementClick = elem => {\n      console.log(elem);\n    };\n\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.menuChange('forums');\n    this.props.getForums();\n  }\n\n  renderForumList() {\n    if (!this.props.forums) return null;\n    return this.props.forums.map(forum => {\n      return /*#__PURE__*/_jsxDEV(ForumsElements, {\n        forum: forum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forums\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forumHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"forumTITLE\",\n          children: \"HubForum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search_bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: this.myRef,\n              type: \"search\",\n              placeholder: \"Search...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.onSearchButtonClick({\n                  key: \"Enter\"\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: search_icon,\n                height: \"20px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 94\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(QueryButton, {\n        callback: this.onElementClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), this.renderForumList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    forums: state.forum.forums\n  };\n};\n\nexport default connect(mapStateToProps, {\n  menuChange,\n  getForums,\n  likedForum\n})(Forums);","map":{"version":3,"sources":["/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/Forums.js"],"names":["React","connect","ForumsElements","QueryButton","menuChange","getForums","likedForum","search_icon","Forums","Component","constructor","props","state","liked","onSearchButtonClick","e","myRef","current","blur","onElementClick","elem","console","log","createRef","componentDidMount","renderForumList","forums","map","forum","render","key","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,QAAkD,kBAAlD;AAEA,OAAO,eAAP;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAGjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAFnBC,KAEmB,GAFX;AAACC,MAAAA,KAAK,EAAE;AAAR,KAEW;;AAAA,SAUnBC,mBAVmB,GAUIC,CAAD,IAAO;AACzB;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB;AACH,KAbkB;;AAAA,SAenBC,cAfmB,GAeDC,IAAD,IAAU;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAjBkB;;AAEf,SAAKJ,KAAL,gBAAahB,KAAK,CAACuB,SAAN,EAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,KAAL,CAAWP,UAAX,CAAsB,QAAtB;AACA,SAAKO,KAAL,CAAWN,SAAX;AACH;;AAWDoB,EAAAA,eAAe,GAAG;AACd,QAAI,CAAC,KAAKd,KAAL,CAAWe,MAAhB,EAAwB,OAAO,IAAP;AAExB,WAAO,KAAKf,KAAL,CAAWe,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACpC,0BACI,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJM,CAAP;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAA,oCACI;AAAO,cAAA,GAAG,EAAE,KAAKb,KAAjB;AAAwB,cAAA,IAAI,EAAC,QAA7B;AAAsC,cAAA,WAAW,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,OAAO,EAAE,MAAI;AAAC,qBAAKF,mBAAL,CAAyB;AAACgB,kBAAAA,GAAG,EAAE;AAAN,iBAAzB;AAAyC,eAA/D;AAAA,qCAAiE;AAAK,gBAAA,GAAG,EAAEvB,WAAV;AAAuB,gBAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAjE;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,WAAD;AACI,QAAA,QAAQ,EAAE,KAAKY;AADnB;AAAA;AAAA;AAAA;AAAA,cAXJ,EAeK,KAAKM,eAAL,EAfL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AApDgC;;AAqDpC;;AAED,MAAMM,eAAe,GAAInB,KAAD,IAAW;AAC/B,SAAO;AAAGc,IAAAA,MAAM,EAAEd,KAAK,CAACgB,KAAN,CAAYF;AAAvB,GAAP;AACH,CAFD;;AAIA,eAAezB,OAAO,CAAC8B,eAAD,EAAkB;AAAC3B,EAAAA,UAAD;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAlB,CAAP,CAA8DE,MAA9D,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport ForumsElements from './ForumsElements';\nimport QueryButton from './QueryButton';\n\nimport { menuChange, getForums, likedForum } from '../../../actions';\n\nimport './Forums.scss';\n\nimport search_icon from '../../Header/header_image/search.png';\n\nclass Forums extends React.Component {\n    state = {liked: null}\n\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.props.menuChange('forums');\n        this.props.getForums();\n    }\n\n    onSearchButtonClick = (e) => {\n        //this.onElementClick(`SEARCH_${this.myRef.current.value}`);\n        this.myRef.current.blur();\n    }\n\n    onElementClick = (elem) => {\n        console.log(elem);\n    }\n\n    renderForumList() {\n        if (!this.props.forums) return null;\n\n        return this.props.forums.map((forum) => {\n            return (\n                <ForumsElements forum={forum} />\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Forums\">\n                <div className=\"forumHeader\">\n                    <h1 className=\"forumTITLE\">HubForum</h1>\n                    <div className=\"search_bar\">\n                        <div>\n                            <input ref={this.myRef} type=\"search\" placeholder=\"Search...\"/>\n                            <button onClick={()=>{this.onSearchButtonClick({key: \"Enter\"})}}><img src={search_icon} height=\"20px\"/></button>\n                        </div>\n                    </div>\n                </div>\n\n                <QueryButton \n                    callback={this.onElementClick} \n                />\n\n                {this.renderForumList()}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {  forums: state.forum.forums  };\n}\n\nexport default connect(mapStateToProps, {menuChange, getForums, likedForum})(Forums);"]},"metadata":{},"sourceType":"module"}