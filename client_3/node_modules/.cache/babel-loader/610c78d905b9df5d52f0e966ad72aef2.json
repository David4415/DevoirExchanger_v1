{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/Hubrium v_2/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport history from '../history'; //import { signIn, signOut } from '../actions';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        //this.props.signIn(this.auth.currentUser.get().getId());\n        console.log('Sign In');\n      } else {\n        //this.props.signOut();\n        console.log('Sign Out');\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '859483543582-t6uh3vs9brddfer7i7hujkt2imdt69uq.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  onSignInClick() {\n    this.auth.signIn();\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"GoogleAuth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onSignInClick(),\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), \"Sign In\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {})(GoogleAuth);","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2/client/src/components/GoogleAuth.js"],"names":["React","connect","history","GoogleAuth","Component","onAuthChange","isSignedIn","console","log","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","get","listen","onSignInClick","signIn","renderAuthButton","props","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CACA;;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAerCC,YAfqC,GAetBC,UAAU,IAAG;AACxB,UAAIA,UAAJ,EAAgB;AACZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,OAHD,MAGO;AACH;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AACJ,KAvBoC;AAAA;;AACrCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AAEA,aAAKf,YAAL,CAAkB,KAAKa,IAAL,CAAUZ,UAAV,CAAqBe,GAArB,EAAlB;AACA,aAAKH,IAAL,CAAUZ,UAAV,CAAqBgB,MAArB,CAA4B,KAAKjB,YAAjC;AACH,OARD;AASH,KAVD;AAWH;;AAYDkB,EAAAA,aAAa,GAAG;AACZ,SAAKL,IAAL,CAAUM,MAAV;AACH;;AAEDC,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKC,KAAL,CAAWpB,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,KAAKoB,KAAL,CAAWpB,UAAf,EAA2B;AAC9B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKiB,aAAL,EAAvB;AAA6C,QAAA,SAAS,EAAC,sBAAvD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;AACJ;;AAGDI,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,gBAAM,KAAKF,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AA/CoC;;AAkDzC,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAEvB,IAAAA,UAAU,EAAEuB,KAAK,CAACX,IAAN,CAAWZ;AAAzB,GAAP;AACH,CAFD;;AAIA,eAAeL,OAAO,CAAC2B,eAAD,EAAkB,EAAlB,CAAP,CAA+BzB,UAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport history from '../history';\n//import { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '859483543582-t6uh3vs9brddfer7i7hujkt2imdt69uq.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                \n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = isSignedIn =>{\n        if (isSignedIn) {\n            //this.props.signIn(this.auth.currentUser.get().getId());\n            console.log('Sign In');\n        } else {\n            //this.props.signOut();\n            console.log('Sign Out');\n        }\n    }\n\n    onSignInClick() {\n        this.auth.signIn();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return <div>GoogleAuth</div>;\n        } else {\n            return (\n                <button onClick={() => this.onSignInClick()} className=\"ui red google button\">\n                    <i className=\"google icon\" />\n                    Sign In\n                </button>\n            );\n        }\n    }\n\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn }\n};\n\nexport default connect(mapStateToProps, {  })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}