{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/Hubrium v_2/client/src/components/Body/Routes/DocGet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getCourse } from '../../../actions';\nimport './DocGet.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DocGet extends React.Component {\n  componentDidMount() {\n    this.props.getCourse(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.courseInfo) return null;\n    const {\n      dateCreated\n    } = this.props.courseInfo;\n    const [time, day, month, year] = [dateCreated.slice(11, 19), dateCreated.slice(8, 10), dateCreated.slice(5, 7), dateCreated.slice(0, 4)];\n    const DateA = new Date(`${year}-${month}-${day}`).toDateString();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doc_Body\",\n      style: {\n        backgroundImage: `url(\"${this.props.courseInfo.image}\")`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"docget_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"docget_vote\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"docget_uarr\",\n            children: \"\\u2191\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"docget_numOfLike\",\n            children: this.props.courseInfo.liked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"docget_title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: this.props.courseInfo.titleDoc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.props.courseInfo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"docget_time\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${DateA} \\n at ${time}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    courseInfo: state.cours[`course_${ownProps.match.params.id}`]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCourse\n})(DocGet);","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2/client/src/components/Body/Routes/DocGet.js"],"names":["React","connect","getCourse","DocGet","Component","componentDidMount","props","match","params","id","render","courseInfo","dateCreated","time","day","month","year","slice","DateA","Date","toDateString","backgroundImage","image","liked","titleDoc","description","mapStateToProps","state","ownProps","cours"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAO,eAAP;;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACjCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,SAAX,CAAqB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKJ,KAAL,CAAWK,UAAhB,EAA4B,OAAO,IAAP;AAE5B,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKN,KAAL,CAAWK,UAAjC;AACA,UAAM,CAACE,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAmBC,IAAnB,IAA2B,CAACJ,WAAW,CAACK,KAAZ,CAAkB,EAAlB,EAAqB,EAArB,CAAD,EAA2BL,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAoB,EAApB,CAA3B,EAAoDL,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,CAApD,EAA4EL,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,CAA5E,CAAjC;AACA,UAAMC,KAAK,GAAG,IAAIC,IAAJ,CAAU,GAAEH,IAAK,IAAGD,KAAM,IAAGD,GAAI,EAAjC,EAAoCM,YAApC,EAAd;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,QAAO,KAAKf,KAAL,CAAWK,UAAX,CAAsBW,KAAM;AAArD,OAAjC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,sBACK,KAAKhB,KAAL,CAAWK,UAAX,CAAsBY;AAD3B;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAA,sBAAK,KAAKjB,KAAL,CAAWK,UAAX,CAAsBa;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAI,KAAKlB,KAAL,CAAWK,UAAX,CAAsBc;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAA,sBAAK,GAAEP,KAAM,UAASL,IAAK;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AAjCgC;;AAoCrC,MAAMa,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAGjB,IAAAA,UAAU,EAAEgB,KAAK,CAACE,KAAN,CAAa,UAASD,QAAQ,CAACrB,KAAT,CAAeC,MAAf,CAAsBC,EAAG,EAA/C;AAAf,GAAP;AACH,CAFD;;AAIA,eAAeR,OAAO,CAACyB,eAAD,EAAkB;AAACxB,EAAAA;AAAD,CAAlB,CAAP,CAAsCC,MAAtC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {getCourse} from '../../../actions';\n\nimport './DocGet.scss';\n\nclass DocGet extends React.Component {\n    componentDidMount() {\n        this.props.getCourse(this.props.match.params.id);\n    }\n\n    render() {\n        if (!this.props.courseInfo) return null;\n\n        const {dateCreated} = this.props.courseInfo;\n        const [time, day, month, year] = [dateCreated.slice(11,19), dateCreated.slice(8,10), dateCreated.slice(5,7), dateCreated.slice(0,4)];\n        const DateA = new Date(`${year}-${month}-${day}`).toDateString();\n\n        return (\n            <div className=\"doc_Body\" style={{backgroundImage:`url(\"${this.props.courseInfo.image}\")`}}>\n                <div className=\"docget_header\">\n                    <div className=\"docget_vote\">\n                        <div className=\"docget_uarr\">\n                            &uarr;\n                        </div>\n                        <div className=\"docget_numOfLike\">\n                            {this.props.courseInfo.liked}\n                        </div>\n                    </div>\n                    <div className=\"docget_title\">\n                        <h2>{this.props.courseInfo.titleDoc}</h2>\n                        <p>{this.props.courseInfo.description}</p>\n                    </div>\n                    <div className=\"docget_time\">\n                        <p>{`${DateA} \\n at ${time}`}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {  courseInfo: state.cours[`course_${ownProps.match.params.id}`] };\n};\n\nexport default connect(mapStateToProps, {getCourse})(DocGet);"]},"metadata":{},"sourceType":"module"}