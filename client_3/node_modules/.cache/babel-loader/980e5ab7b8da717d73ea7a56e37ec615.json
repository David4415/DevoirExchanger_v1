{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/FormCourse.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { createDoc } from '../../../actions';\nimport history from '../../../history';\nimport './FormCourse.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormCourse extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      selectedFileURL: null\n    };\n\n    this.onSubmit = formValues => {\n      const previewDom = document.querySelector(\".previewDiv\");\n      const previewNoData = document.querySelector(\".previewNoData\");\n\n      if (this.state.selectedFile === null) {\n        previewNoData.style.color = \"red\";\n        previewDom.style.outline = \"3px solid red\";\n        previewDom.style.animation = \"flipAround 1s\";\n        previewNoData.innerHTML = `NO FILE CHOSEN`;\n      } else {\n        const {\n          selectedFile,\n          selectedFileURL\n        } = this.state;\n\n        function pad2(n) {\n          return n < 10 ? '0' + n : n;\n        }\n\n        let date = new Date(Date.now());\n        date = date.getFullYear().toString() + pad2(date.getMonth() + 1) + pad2(date.getDate()) + pad2(date.getHours()) + pad2(date.getMinutes()) + pad2(date.getSeconds());\n        let type = selectedFile.type.match(/\\/.*/g)[0].slice(1);\n        if (selectedFile.type.slice(5) === \"image\") type = \"image\";else if (selectedFile.type.match(/\\/.*/g)[0].slice(1) === \"pdf\") type = \"pdf\";\n        if (!formValues.tags) formValues.tags = \"\";\n        console.log(selectedFile);\n        let formValuesAdd = { ...formValues,\n          URL: selectedFileURL,\n          type: type,\n          dateCreated: date,\n          image: \"https://cdn.pixabay.com/photo/2021/05/18/08/07/buildings-6262595_1280.jpg\",\n          creator: this.props.userId\n        };\n        this.props.createDoc(formValuesAdd);\n        this.props.onSubmit(formValuesAdd);\n        history.push('/courses');\n      }\n    };\n\n    this.onFileChange = async event => {\n      const file = event.target.files[0];\n      this.setState({\n        selectedFile: file\n      });\n      const previewImageDom = document.querySelector(\"#previewImage\");\n      const previewDom = document.querySelector(\".previewDiv\");\n      const previewNoData = document.querySelector(\".previewNoData\");\n      await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onloadend = e => {\n          let img = new Image();\n\n          img.onload = function () {\n            previewNoData.style.color = \"black\";\n            previewDom.style.outline = \"none\";\n            previewImageDom.style.backgroundImage = `url(\"${e.target.result}\")`;\n            previewImageDom.style.height = `${Math.ceil(200 * img.height / img.width)}px`;\n            previewImageDom.style.maxWidth = \"200px\";\n            previewImageDom.style.minWidth = \"200px\";\n            previewImageDom.style.backgroundSize = \"contain\";\n          };\n\n          img.src = e.target.result;\n          this.setState({\n            selectedFileURL: e.target.result\n          });\n        };\n\n        reader.readAsDataURL(file);\n      });\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }, type) => {\n      const {\n        editValues\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          autoComplete: \"off\",\n          value: editValues && type === \"title\" ? editValues.titleDoc : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderTextArea = ({\n      input,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderSelect = ({\n      input,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"anglais\",\n            children: \"Anglais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fran\\xE7ais\",\n            children: \"Fran\\xE7ais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pc\",\n            children: \"Physique-Chimie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"math\",\n            children: \"Math\\xE9matiques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"geographie\",\n            children: \"G\\xE9ographie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"svt\",\n            children: \"SVT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"histoire\",\n            children: \"Histoire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMessage\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 38\n    }, this);\n  }\n\n  render() {\n    const {\n      editValues\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"formCourse\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"title\",\n          children: \"Title \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          value: editValues ? editValues.titleDoc : \"\",\n          name: \"title\",\n          component: this.renderInput(\"title\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"description\",\n          children: \"Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          component: this.renderTextArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 88\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"tags\",\n          children: \"Tags \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"tags\",\n          component: this.renderInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"matiere\",\n          children: \"Mati\\xE8re\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"matiere\",\n          className: \"form_item field\",\n          component: this.renderSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"file\",\n          children: \"Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"file\",\n          type: \"file\",\n          onChange: this.onFileChange,\n          className: \"uploadFile\",\n          accept: \".jpeg,.png,.jpg,application/pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_item field previewDiv\",\n          name: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"previewImage\",\n            style: {\n              \"width\": \"200px\",\n              \"boxShadow\": \"1px 1px 10px black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), this.state.selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fichePreview\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: this.state.selectedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Size:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this), \" \", this.state.selectedFile.size / 1000, \" Ko\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Last Modified:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 41\n                }, this), \" \", `${this.state.selectedFile.lastModifiedDate}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"previewNoData\",\n            children: \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSubmitCreateDoc\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n  if (!formValues.title) errors.title = 'You must enter a title';else if (formValues.title.length >= 10 && 50 <= formValues.title.length) errors.title = 'You must enter minimum 10 characters and maximum 50 characters';\n  if (!formValues.description) errors.description = 'You must enter a description';else if (formValues.description.length > 1000) errors.description = 'You must enter maximum 1000 characters';\n  if (!formValues.matiere) errors.matiere = 'Please choose a subject';\n  if (formValues.file === null) errors.file = 'Please choose a file';\n  console.log(errors);\n  return errors;\n};\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.userId\n  };\n};\n\nconst FormCoursewithReduxForm = reduxForm({\n  form: 'DocumentForm',\n  validate\n})(FormCourse);\nexport default connect(mapStateToProps, {\n  createDoc\n})(FormCoursewithReduxForm);","map":{"version":3,"sources":["/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/FormCourse.js"],"names":["React","connect","Field","reduxForm","createDoc","history","FormCourse","Component","state","selectedFile","selectedFileURL","onSubmit","formValues","previewDom","document","querySelector","previewNoData","style","color","outline","animation","innerHTML","pad2","n","date","Date","now","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","type","match","slice","tags","console","log","formValuesAdd","URL","dateCreated","image","creator","props","userId","push","onFileChange","event","file","target","files","setState","previewImageDom","Promise","resolve","reject","reader","FileReader","onloadend","e","img","Image","onload","backgroundImage","result","height","Math","ceil","width","maxWidth","minWidth","backgroundSize","src","readAsDataURL","renderInput","input","label","meta","editValues","error","touched","titleDoc","renderError","renderTextArea","renderSelect","render","handleSubmit","name","size","lastModifiedDate","validate","errors","title","length","description","matiere","mapStateToProps","auth","FormCoursewithReduxForm","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport {createDoc} from '../../../actions';\nimport history from '../../../history';\n\nimport './FormCourse.scss';\n\nclass FormCourse extends React.Component {\n    state = { selectedFile: null, selectedFileURL: null };\n\n    onSubmit = (formValues) => {\n        const previewDom = document.querySelector(\".previewDiv\");\n        const previewNoData = document.querySelector(\".previewNoData\");\n\n        if (this.state.selectedFile === null) {\n            previewNoData.style.color = \"red\";\n            previewDom.style.outline = \"3px solid red\";\n            previewDom.style.animation = \"flipAround 1s\"\n            previewNoData.innerHTML = `NO FILE CHOSEN`\n        } else {\n            const {selectedFile, selectedFileURL} = this.state;\n            \n            function pad2(n) { return n < 10 ? '0' + n : n }\n            let date = new Date(Date.now());\n            date = date.getFullYear().toString() + pad2(date.getMonth() + 1) + pad2( date.getDate()) + pad2( date.getHours() ) + pad2( date.getMinutes() ) + pad2( date.getSeconds() );\n\n            let type = selectedFile.type.match(/\\/.*/g)[0].slice(1);\n            if (selectedFile.type.slice(5)===\"image\") type = \"image\"\n            else if (selectedFile.type.match(/\\/.*/g)[0].slice(1) === \"pdf\") type = \"pdf\"\n            \n            if (!formValues.tags) formValues.tags = \"\";\n            console.log(selectedFile);\n            let formValuesAdd = {...formValues, \n                URL: selectedFileURL, \n                type: type,\n                dateCreated: date,\n                image: \"https://cdn.pixabay.com/photo/2021/05/18/08/07/buildings-6262595_1280.jpg\",\n                creator: this.props.userId\n            };\n\n            this.props.createDoc(formValuesAdd);\n            this.props.onSubmit(formValuesAdd);\n            history.push('/courses');\n        }\n    }\n\n    renderError({ error, touched }) {\n        if (touched && error) return <div className=\"errorMessage\">{error}</div>;\n    }\n\n    onFileChange = async (event) => {\n        const file = event.target.files[0];\n        this.setState({ selectedFile: file });\n        const previewImageDom = document.querySelector(\"#previewImage\");\n        const previewDom = document.querySelector(\".previewDiv\");\n        const previewNoData = document.querySelector(\".previewNoData\");\n\n        await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onloadend = (e) => {\n                let img = new Image;\n                img.onload = function() {\n                    previewNoData.style.color = \"black\";\n                    previewDom.style.outline = \"none\";\n                    previewImageDom.style.backgroundImage =  `url(\"${e.target.result}\")`;\n                    previewImageDom.style.height = `${Math.ceil((200*img.height)/img.width)}px`;\n                    previewImageDom.style.maxWidth = \"200px\";\n                    previewImageDom.style.minWidth = \"200px\";\n                    previewImageDom.style.backgroundSize = \"contain\";\n                };\n                img.src = e.target.result;\n                this.setState({selectedFileURL: e.target.result});\n            }\n            reader.readAsDataURL(file);\n        });\n    }\n\n    renderInput = ({ input, label, meta }, type) => {\n        const {editValues} = this.props;\n        return (\n            <div>\n                <input className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} autoComplete=\"off\" \n                    value={editValues && type===\"title\" ? editValues.titleDoc : \"\"} /> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderTextArea = ({ input, label, meta }) => {\n        return (\n            <div>\n                <textarea className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} /> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderSelect= ({ input, label, meta }) => {\n        return (\n            <div>\n                <select className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input}>\n                    <option></option>\n                    <option value=\"anglais\">Anglais</option>\n                    <option value=\"français\">Français</option>\n                    <option value=\"pc\">Physique-Chimie</option>\n                    <option value=\"math\">Mathématiques</option>\n                    <option value=\"geographie\">Géographie</option>\n                    <option value=\"svt\">SVT</option>\n                    <option value=\"histoire\">Histoire</option>\n                </select> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n\n    render() {\n        const {editValues} = this.props;\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"formCourse\">\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"title\">Title </label><Field value={editValues ? editValues.titleDoc : \"\"} name=\"title\" component={this.renderInput(\"title\")}/>\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"description\">Description </label><Field name=\"description\" component={this.renderTextArea}/>\n                </div>\n                \n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"tags\">Tags </label><Field name=\"tags\" component={this.renderInput}/>\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"matiere\">Matière</label>\n                    <Field name=\"matiere\" className=\"form_item field\" component={this.renderSelect} />\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"file\">Course</label>\n                    <input name=\"file\" type=\"file\" onChange={this.onFileChange} className=\"uploadFile\" \n                        accept=\".jpeg,.png,.jpg,application/pdf\"/>\n                </div>\n\n                \n                <div className=\"itemCreate\">\n                    <label className=\"label\"> </label>\n                    <div className=\"form_item field previewDiv\" name=\"preview\">\n                        <div id=\"previewImage\" style={{\"width\": \"200px\", \"boxShadow\":\"1px 1px 10px black\"}} />\n                        {this.state.selectedFile \n                            ? <div className=\"fichePreview\">\n                                <h1>{this.state.selectedFile.name}</h1>\n                                <ul>\n                                    <li><strong>Size:</strong> {this.state.selectedFile.size/1000} Ko</li>\n                                    <li><strong>Last Modified:</strong> {`${this.state.selectedFile.lastModifiedDate}`}</li>\n                                </ul>\n                                </div> \n                            : <div className=\"previewNoData\">No data</div> }\n                    </div>\n                </div>\n                \n                <button className=\"buttonSubmitCreateDoc\">Submit</button>\n            </form>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if (!formValues.title) errors.title = 'You must enter a title';\n    else if (formValues.title.length >= 10 && 50 <= formValues.title.length) errors.title = 'You must enter minimum 10 characters and maximum 50 characters';\n\n    if (!formValues.description) errors.description = 'You must enter a description';\n    else if (formValues.description.length > 1000) errors.description = 'You must enter maximum 1000 characters';\n\n    if (!formValues.matiere) errors.matiere = 'Please choose a subject';\n\n    if (formValues.file === null) errors.file = 'Please choose a file';\n\n    console.log(errors);\n    return errors;\n};\n\nconst mapStateToProps = (state) => {\n    return {  userId: state.auth.userId };\n}\n\nconst FormCoursewithReduxForm = reduxForm({\n    form: 'DocumentForm',\n    validate\n})(FormCourse);\n\nexport default connect(mapStateToProps, {createDoc})(FormCoursewithReduxForm);"]},"metadata":{},"sourceType":"module"}