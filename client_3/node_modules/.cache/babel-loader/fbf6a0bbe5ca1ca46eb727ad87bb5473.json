{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/Hubrium v_2/client/src/components/Body/Routes/DocGet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getCourse } from '../../../actions';\nimport './DocGet.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DocGet extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      liked: null\n    };\n\n    this.onLikedClicked = bool => {\n      if (bool) {\n        if (this.state.liked === null || this.state.liked === false) this.setState({\n          liked: true\n        });else this.setState({\n          liked: null\n        });\n      } else {\n        if (this.state.liked === null || this.state.liked === true) this.setState({\n          liked: false\n        });else this.setState({\n          liked: null\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCourse(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.courseInfo) return null;\n    const {\n      dateCreated\n    } = this.props.courseInfo;\n    const [time, day, month, year] = [dateCreated.slice(11, 19), dateCreated.slice(8, 10), dateCreated.slice(5, 7), dateCreated.slice(0, 4)];\n    const DateA = new Date(`${year}-${month}-${day}`).toDateString();\n    let like_className;\n\n    switch (this.state.liked) {\n      case true:\n        like_className = 'color_green';\n        break;\n\n      case false:\n        like_className = 'color_red';\n        break;\n\n      case null:\n        like_className = '';\n        break;\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doc_Body\",\n      style: {\n        backgroundImage: `url(\"${this.props.courseInfo.image}\")`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"docget_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"docget_vote\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `docget_uarr ${this.state.liked ? 'color_green' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => this.onLikedClicked(true),\n              children: \"\\u2191\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 98\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `docget_numOfLike ${like_className}`,\n            children: this.props.courseInfo.liked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `docget_darr ${this.state.liked === false ? 'color_red' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => this.onLikedClicked(false),\n              children: \"\\u2193\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 104\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"docget_title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: this.props.courseInfo.titleDoc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.props.courseInfo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"docget_time\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${DateA} \\n at ${time}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    courseInfo: state.cours[`course_${ownProps.match.params.id}`]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCourse\n})(DocGet);","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2/client/src/components/Body/Routes/DocGet.js"],"names":["React","connect","getCourse","DocGet","Component","state","liked","onLikedClicked","bool","setState","componentDidMount","props","match","params","id","render","courseInfo","dateCreated","time","day","month","year","slice","DateA","Date","toDateString","like_className","backgroundImage","image","titleDoc","description","mapStateToProps","ownProps","cours"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {getCourse} from '../../../actions';\n\nimport './DocGet.scss';\n\nclass DocGet extends React.Component {\n    state = {liked: null}\n\n    componentDidMount() {\n        this.props.getCourse(this.props.match.params.id);\n    }\n    onLikedClicked = (bool) => {\n        if (bool) {\n            if (this.state.liked === null || this.state.liked === false) this.setState({liked:true})\n            else this.setState({liked:null})\n        } else {\n            if (this.state.liked === null || this.state.liked === true) this.setState({liked:false})\n            else this.setState({liked:null})\n        }\n    }\n\n    render() {\n        if (!this.props.courseInfo) return null;\n\n        const {dateCreated} = this.props.courseInfo;\n        const [time, day, month, year] = [dateCreated.slice(11,19), dateCreated.slice(8,10), dateCreated.slice(5,7), dateCreated.slice(0,4)];\n        const DateA = new Date(`${year}-${month}-${day}`).toDateString();\n        let like_className;\n        switch (this.state.liked) {\n            case true: like_className = 'color_green'; break;\n            case false: like_className = 'color_red'; break;\n            case null: like_className = ''; break;\n        };\n\n        return (\n            <div className=\"doc_Body\" style={{backgroundImage:`url(\"${this.props.courseInfo.image}\")`}}>\n                \n                <div className=\"docget_header\">\n                    <div className=\"docget_vote\">\n                        <div className={`docget_uarr ${this.state.liked ? 'color_green' : '' }`}><p onClick={()=>this.onLikedClicked(true)}>&uarr;</p></div>\n                        <div className={`docget_numOfLike ${like_className}`}>{this.props.courseInfo.liked}</div>\n                        <div className={`docget_darr ${this.state.liked===false ? 'color_red' : '' }`}><p onClick={()=>this.onLikedClicked(false)}>&darr;</p></div>\n                    </div>\n                    <div className=\"docget_title\">\n                        <h2>{this.props.courseInfo.titleDoc}</h2>\n                        <p>{this.props.courseInfo.description}</p>\n                    </div>\n                    <div className=\"docget_time\">\n                        <p>{`${DateA} \\n at ${time}`}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {  courseInfo: state.cours[`course_${ownProps.match.params.id}`] };\n};\n\nexport default connect(mapStateToProps, {getCourse})(DocGet);"]},"metadata":{},"sourceType":"module"}