{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/Hubrium v_2 copie/client_3/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport history from '../history';\nimport { signIn, signOut } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getBasicProfile());\n      } else {\n        this.props.signOut();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '542587154619-3njdd7kn733e9le5sm51u9cro586ur2u.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  onSignInClick() {\n    this.auth.signIn();\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"GoogleAuth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onSignInClick(),\n        className: `ui ${this.props.buttonColor} google button`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), this.props.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  onSignOutClick() {\n    this.auth.signOut();\n  }\n\n  renderSignOutButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.onSignOutClick(),\n      className: `ui black google button`,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"google icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), \"Sign Out\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    if (this.props.signOutBut) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderSignOutButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 43\n    }, this);else if (this.props.displayButton) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 51\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth); //mapStateToProps","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2 copie/client_3/src/components/GoogleAuth.js"],"names":["React","connect","history","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","auth","currentUser","get","getBasicProfile","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onSignInClick","renderAuthButton","buttonColor","text","onSignOutClick","renderSignOutButton","render","signOutBut","displayButton","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport history from '../history';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '542587154619-3njdd7kn733e9le5sm51u9cro586ur2u.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                \n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = isSignedIn =>{\n        if (isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getBasicProfile ());\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick() {\n        this.auth.signIn();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return <button>GoogleAuth</button>;\n        } else {\n            return (\n                <button onClick={() => this.onSignInClick()} className={`ui ${this.props.buttonColor} google button`}>\n                    <i className=\"google icon\" />\n                    {this.props.text}\n                </button>\n            );\n        }\n    }\n\n    onSignOutClick() {\n        this.auth.signOut();\n    }\n\n    renderSignOutButton() {\n        return (\n            <button onClick={() => this.onSignOutClick()} className={`ui black google button`}>\n                <i className=\"google icon\" />\n                Sign Out\n            </button>\n        )\n    }\n\n    render() {\n        if (this.props.signOutBut) return <div>{this.renderSignOutButton()}</div>\n        else if (this.props.displayButton) return <div>{this.renderAuthButton()}</div>;\n        else return <div></div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn }\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n//mapStateToProps"]},"metadata":{},"sourceType":"module"}