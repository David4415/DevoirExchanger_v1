{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/Hubrium v_2/client/src/components/Body/Routes/Statistics.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { menuChange } from '../../../actions';\nimport './Statistics.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Statistics extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeButton: 1\n    };\n  }\n\n  componentDidMount() {\n    this.props.menuChange('statistics');\n  }\n\n  renderProfile() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderStats() {\n    switch (this.state.activeButton) {\n      case 1:\n        return this.renderProfile();\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 24\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 24\n        }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Statistics\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats_button_cont\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: this.state.activeButton === 1 ? 'active' : '',\n          onClick: () => this.setState({\n            activeButton: 1\n          }),\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: this.state.activeButton === 2 ? 'active' : '',\n          onClick: () => this.setState({\n            activeButton: 2\n          }),\n          children: \"Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: this.state.activeButton === 3 ? 'active' : '',\n          onClick: () => this.setState({\n            activeButton: 3\n          }),\n          children: \"Forum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: this.state.activeButton === 4 ? 'active' : '',\n          onClick: () => this.setState({\n            activeButton: 4\n          }),\n          children: \"Hall of Frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statsShow\",\n        children: this.renderStats()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userInfo: state.auth.userInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  menuChange\n})(Statistics);","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2/client/src/components/Body/Routes/Statistics.js"],"names":["React","connect","menuChange","Statistics","Component","state","activeButton","componentDidMount","props","renderProfile","renderStats","render","setState","mapStateToProps","isSignedIn","auth","userInfo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAAEC,MAAAA,YAAY,EAAC;AAAf,KAD6B;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWN,UAAX,CAAsB,YAAtB;AACH;;AAEDO,EAAAA,aAAa,GAAG;AACZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAEDC,EAAAA,WAAW,GAAG;AACV,YAAQ,KAAKL,KAAL,CAAWC,YAAnB;AACI,WAAK,CAAL;AACI,eAAO,KAAKG,aAAL,EAAP;;AACJ,WAAK,CAAL;AACI,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ,WAAK,CAAL;AACI,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ,WAAK,CAAL;AACI,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AARR;AAUH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAE,KAAKN,KAAL,CAAWC,YAAX,KAA0B,CAA1B,GAA8B,QAA9B,GAAyC,EAA5D;AAAgE,UAAA,OAAO,EAAE,MAAI,KAAKM,QAAL,CAAc;AAACN,YAAAA,YAAY,EAAC;AAAd,WAAd,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,YAAX,KAA0B,CAA1B,GAA8B,QAA9B,GAAyC,EAA5D;AAAgE,UAAA,OAAO,EAAE,MAAI,KAAKM,QAAL,CAAc;AAACN,YAAAA,YAAY,EAAC;AAAd,WAAd,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,YAAX,KAA0B,CAA1B,GAA8B,QAA9B,GAAyC,EAA5D;AAAgE,UAAA,OAAO,EAAE,MAAI,KAAKM,QAAL,CAAc;AAACN,YAAAA,YAAY,EAAC;AAAd,WAAd,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,YAAX,KAA0B,CAA1B,GAA8B,QAA9B,GAAyC,EAA5D;AAAgE,UAAA,OAAO,EAAE,MAAI,KAAKM,QAAL,CAAc;AAACN,YAAAA,YAAY,EAAC;AAAd,WAAd,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACK,KAAKI,WAAL;AADL;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA1CoC;;AA2CxC;;AAED,MAAMG,eAAe,GAAIR,KAAD,IAAW;AAC/B,SAAO;AAAGS,IAAAA,UAAU,EAAGT,KAAK,CAACU,IAAN,CAAWD,UAA3B;AAAuCE,IAAAA,QAAQ,EAAEX,KAAK,CAACU,IAAN,CAAWC;AAA5D,GAAP;AACH,CAFD;;AAIA,eAAef,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA;AAAD,CAAlB,CAAP,CAAuCC,UAAvC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { menuChange } from '../../../actions';\n\nimport './Statistics.scss';\n\nclass Statistics extends React.Component {\n    state = { activeButton:1 }\n    componentDidMount() {\n        this.props.menuChange('statistics');\n    }\n\n    renderProfile() {\n        return (\n            <div>\n                Hi\n            </div>\n        );\n    }\n\n    renderStats() {\n        switch (this.state.activeButton) {\n            case 1:\n                return this.renderProfile();\n            case 2:\n                return <div>2</div>\n            case 3:\n                return <div>3</div>\n            case 4:\n                return <div>4</div>\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Statistics\">\n                {/*this.props.userInfo.id */}\n                <div className=\"stats_button_cont\">\n                    <button className={this.state.activeButton===1 ? 'active' : ''} onClick={()=>this.setState({activeButton:1})}>Profile</button>\n                    <button className={this.state.activeButton===2 ? 'active' : ''} onClick={()=>this.setState({activeButton:2})}>Courses</button>\n                    <button className={this.state.activeButton===3 ? 'active' : ''} onClick={()=>this.setState({activeButton:3})}>Forum</button>\n                    <button className={this.state.activeButton===4 ? 'active' : ''} onClick={()=>this.setState({activeButton:4})}>Hall of Frame</button>\n                </div>\n                <div className=\"statsShow\">\n                    {this.renderStats()}\n                </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {  isSignedIn : state.auth.isSignedIn, userInfo: state.auth.userInfo };\n}\n\nexport default connect(mapStateToProps, {menuChange})(Statistics);"]},"metadata":{},"sourceType":"module"}