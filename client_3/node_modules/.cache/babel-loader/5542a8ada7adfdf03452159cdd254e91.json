{"ast":null,"code":"import server from '../apis/server';\nexport const menuChange = to => {\n  return {\n    type: 'ON_MENU_CHANGE',\n    payload: to\n  };\n};\nexport const signIn = userInfo => async dispatch => {\n  // get info from data base\n  const response = await server.post(`/getUserInfo/${userInfo.getId()}`, [userInfo]);\n  console.log(response.data);\n  dispatch({\n    type: 'SIGN_IN',\n    payload: {\n      id: userInfo.getId(),\n      info: response.data[0]\n    }\n  });\n};\nexport const signOut = () => {\n  return {\n    type: 'SIGN_OUT'\n  };\n};\nexport const getCoursesFrom = userId => async dispatch => {\n  const response = await server.get(`/getCourseUserId/${userId}`);\n  dispatch({\n    type: 'GET_COURSE_FROM_ID',\n    payload: response.data\n  });\n};\nexport const getCourses = (queries, search) => async dispatch => {\n  const response = await server.post(`/getCourses`, [queries, search]);\n  dispatch({\n    type: 'GET_COURSES',\n    payload: response.data\n  });\n};\nexport const getCourse = id => async dispatch => {\n  const response = await server.get(`/getCourse/${id}`);\n  dispatch({\n    type: 'GET_COURSE',\n    payload: response.data\n  });\n};\nexport const likedContent = (docId, like, creatorId) => async dispatch => {\n  console.log(`/likedContent/${docId}?like=${like}&creatorId=${creatorId}`);\n  const response = await server.get(`/likedContent/${docId}?like=${like}&creatorId=${creatorId}`);\n};\nexport const viewContent = (docId, creatorId) => async dispatch => {\n  const response = await server.get(`/viewContent/${docId}?creatorId=${creatorId}`);\n};","map":{"version":3,"sources":["/Users/Programmation/Documents/Hubrium v_2/client_3/src/actions/index.js"],"names":["server","menuChange","to","type","payload","signIn","userInfo","dispatch","response","post","getId","console","log","data","id","info","signOut","getCoursesFrom","userId","get","getCourses","queries","search","getCourse","likedContent","docId","like","creatorId","viewContent"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AAEA,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQ;AAC9B,SAAO;AAAEC,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEF;AAAnC,GAAP;AACH,CAFM;AAKP,OAAO,MAAMG,MAAM,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AACpD;AACA,QAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,IAAP,CAAa,gBAAeH,QAAQ,CAACI,KAAT,EAAiB,EAA7C,EAAgD,CAACJ,QAAD,CAAhD,CAAvB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAArB;AACAN,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,OAAO,EAAE;AAACU,MAAAA,EAAE,EAAER,QAAQ,CAACI,KAAT,EAAL;AAAuBK,MAAAA,IAAI,EAAEP,QAAQ,CAACK,IAAT,CAAc,CAAd;AAA7B;AAA5B,GAAD,CAAR;AACH,CALM;AAMP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AAAEb,IAAAA,IAAI,EAAE;AAAR,GAAP;AACH,CAFM;AAIP,OAAO,MAAMc,cAAc,GAAIC,MAAD,IAAY,MAAOX,QAAP,IAAoB;AAC1D,QAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACmB,GAAP,CAAY,oBAAmBD,MAAO,EAAtC,CAAvB;AACAX,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAC,oBAAP;AAA6BC,IAAAA,OAAO,EAAEI,QAAQ,CAACK;AAA/C,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMO,UAAU,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB,MAAOf,QAAP,IAAoB;AAC/D,QAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,IAAP,CAAa,aAAb,EAA2B,CAACY,OAAD,EAAUC,MAAV,CAA3B,CAAvB;AACAf,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAC,aAAP;AAAsBC,IAAAA,OAAO,EAAEI,QAAQ,CAACK;AAAxC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMU,SAAS,GAAIT,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AACjD,QAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACmB,GAAP,CAAY,cAAaL,EAAG,EAA5B,CAAvB;AACAP,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAC,YAAP;AAAqBC,IAAAA,OAAO,EAAEI,QAAQ,CAACK;AAAvC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMW,YAAY,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,SAAd,KAA4B,MAAOpB,QAAP,IAAoB;AACxEI,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBa,KAAM,SAAQC,IAAK,cAAaC,SAAU,EAAvE;AACA,QAAMnB,QAAQ,GAAG,MAAMR,MAAM,CAACmB,GAAP,CAAY,iBAAgBM,KAAM,SAAQC,IAAK,cAAaC,SAAU,EAAtE,CAAvB;AACH,CAHM;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACH,KAAD,EAAQE,SAAR,KAAsB,MAAOpB,QAAP,IAAoB;AACjE,QAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACmB,GAAP,CAAY,gBAAeM,KAAM,cAAaE,SAAU,EAAxD,CAAvB;AACH,CAFM","sourcesContent":["import server from '../apis/server';\n\nexport const menuChange = (to) => {\n    return { type: 'ON_MENU_CHANGE', payload: to};\n};\n\n\nexport const signIn = (userInfo) => async (dispatch) => {\n    // get info from data base\n    const response = await server.post(`/getUserInfo/${userInfo.getId()}`, [userInfo]);\n    console.log(response.data);\n    dispatch({ type: 'SIGN_IN', payload: {id: userInfo.getId(), info: response.data[0]}});\n};\nexport const signOut = () => {\n    return { type: 'SIGN_OUT' }\n};\n\nexport const getCoursesFrom = (userId) => async (dispatch) => {\n    const response = await server.get(`/getCourseUserId/${userId}`);\n    dispatch({ type:'GET_COURSE_FROM_ID', payload: response.data });\n};\n\nexport const getCourses = (queries, search) => async (dispatch) => {\n    const response = await server.post(`/getCourses`, [queries, search]);\n    dispatch({ type:'GET_COURSES', payload: response.data });\n};\n\nexport const getCourse = (id) => async (dispatch) => {\n    const response = await server.get(`/getCourse/${id}`);\n    dispatch({ type:'GET_COURSE', payload: response.data })\n}\n\nexport const likedContent = (docId, like, creatorId) => async (dispatch) => {\n    console.log(`/likedContent/${docId}?like=${like}&creatorId=${creatorId}`);\n    const response = await server.get(`/likedContent/${docId}?like=${like}&creatorId=${creatorId}`);\n}\n\nexport const viewContent = (docId, creatorId) => async (dispatch) => {\n    const response = await server.get(`/viewContent/${docId}?creatorId=${creatorId}`);\n}\n"]},"metadata":{},"sourceType":"module"}