{"ast":null,"code":"var _jsxFileName = \"/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/FormCourse.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { createDoc, getCourse } from '../../../actions';\nimport history from '../../../history';\nimport './FormCourse.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormCourse extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      selectedFileURL: null\n    };\n\n    this.onSubmit = formValues => {\n      const previewDom = document.querySelector(\".previewDiv\");\n      const previewNoData = document.querySelector(\".previewNoData\");\n\n      if (this.state.selectedFile === null) {\n        previewNoData.style.color = \"red\";\n        previewDom.style.outline = \"3px solid red\";\n        previewDom.style.animation = \"flipAround 1s\";\n        previewNoData.innerHTML = `NO FILE CHOSEN`;\n      } else {\n        const {\n          selectedFile,\n          selectedFileURL\n        } = this.state;\n\n        function pad2(n) {\n          return n < 10 ? '0' + n : n;\n        }\n\n        let date = new Date(Date.now());\n        date = date.getFullYear().toString() + pad2(date.getMonth() + 1) + pad2(date.getDate()) + pad2(date.getHours()) + pad2(date.getMinutes()) + pad2(date.getSeconds());\n        let type = selectedFile.type.match(/\\/.*/g)[0].slice(1);\n        if (selectedFile.type.slice(5) === \"image\") type = \"image\";else if (selectedFile.type.match(/\\/.*/g)[0].slice(1) === \"pdf\") type = \"pdf\";\n        if (!formValues.tags) formValues.tags = \"\";\n        console.log(selectedFile);\n        let formValuesAdd = { ...formValues,\n          URL: selectedFileURL,\n          type: type,\n          dateCreated: date,\n          image: \"https://cdn.pixabay.com/photo/2021/05/18/08/07/buildings-6262595_1280.jpg\",\n          creator: this.props.userId\n        };\n        this.props.createDoc(formValuesAdd);\n        this.props.onSubmit(formValuesAdd);\n        history.push('/courses');\n      }\n    };\n\n    this.onFileChange = async event => {\n      const file = event.target.files[0];\n      this.setState({\n        selectedFile: file\n      });\n      const previewImageDom = document.querySelector(\"#previewImage\");\n      const previewDom = document.querySelector(\".previewDiv\");\n      const previewNoData = document.querySelector(\".previewNoData\");\n      await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onloadend = e => {\n          let img = new Image();\n\n          img.onload = function () {\n            previewNoData.style.color = \"black\";\n            previewDom.style.outline = \"none\";\n            previewImageDom.style.backgroundImage = `url(\"${e.target.result}\")`;\n            previewImageDom.style.height = `${Math.ceil(200 * img.height / img.width)}px`;\n            previewImageDom.style.maxWidth = \"200px\";\n            previewImageDom.style.minWidth = \"200px\";\n            previewImageDom.style.backgroundSize = \"contain\";\n          };\n\n          img.src = e.target.result;\n          this.setState({\n            selectedFileURL: e.target.result\n          });\n        };\n\n        reader.readAsDataURL(file);\n      });\n    };\n\n    this.renderTitle = ({\n      input,\n      label,\n      meta\n    }) => {\n      const {\n        courseInfo\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          autoComplete: \"off\",\n          value: courseInfo ? courseInfo.titleDoc : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderTags = ({\n      input,\n      label,\n      meta\n    }, type) => {\n      const {\n        courseInfo\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          autoComplete: \"off\",\n          value: courseInfo ? courseInfo.tags : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderTextArea = ({\n      input,\n      label,\n      meta\n    }) => {\n      const {\n        courseInfo\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          ...input,\n          value: courseInfo ? courseInfo.description : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderSelect = ({\n      input,\n      label,\n      meta\n    }) => {\n      const {\n        courseInfo\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: `form_item ${meta.error && meta.touched ? 'error' : ''}`,\n          value: \"anglais\",\n          ...input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"anglais\",\n            selected: \"anglais\" == \"anglais\",\n            children: \"Anglais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fran\\xE7ais\",\n            selected: \"anglais\" == \"fran√ßais\",\n            children: \"Fran\\xE7ais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pc\",\n            selected: \"anglais\" == \"pc\",\n            children: \"Physique-Chimie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"math\",\n            selected: optionsState == \"histoire\",\n            children: \"Math\\xE9matiques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"geographie\",\n            selected: optionsState == \"histoire\",\n            children: \"G\\xE9ographie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"svt\",\n            selected: optionsState == \"histoire\",\n            children: \"SVT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"histoire\",\n            selected: optionsState == \"histoire\",\n            children: \"Histoire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCourse(this.props.docId);\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMessage\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 38\n    }, this);\n  }\n\n  render() {\n    const {\n      courseInfo\n    } = this.props;\n    console.log(courseInfo);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"formCourse\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"title\",\n          children: \"Title \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"title\",\n          component: this.renderTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"description\",\n          children: \"Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          component: this.renderTextArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 88\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"tags\",\n          children: \"Tags \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"tags\",\n          component: this.renderTags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"matiere\",\n          children: \"Mati\\xE8re\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"matiere\",\n          className: \"form_item field\",\n          component: this.renderSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"file\",\n          children: \"Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"file\",\n          type: \"file\",\n          onChange: this.onFileChange,\n          className: \"uploadFile\",\n          accept: \".jpeg,.png,.jpg,application/pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemCreate\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_item field previewDiv\",\n          name: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"previewImage\",\n            style: {\n              \"width\": \"200px\",\n              \"boxShadow\": \"1px 1px 10px black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), this.state.selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fichePreview\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: this.state.selectedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Size:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 41\n                }, this), \" \", this.state.selectedFile.size / 1000, \" Ko\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Last Modified:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 41\n                }, this), \" \", `${this.state.selectedFile.lastModifiedDate}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"previewNoData\",\n            children: \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSubmitCreateDoc\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n  if (!formValues.title) errors.title = 'You must enter a title';else if (formValues.title.length >= 10 && 50 <= formValues.title.length) errors.title = 'You must enter minimum 10 characters and maximum 50 characters';\n  if (!formValues.description) errors.description = 'You must enter a description';else if (formValues.description.length > 1000) errors.description = 'You must enter maximum 1000 characters';\n  if (!formValues.matiere) errors.matiere = 'Please choose a subject';\n  if (formValues.file === null) errors.file = 'Please choose a file';\n  console.log(errors);\n  return errors;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const link = `course_${ownProps.docId}`;\n  if (state.cours[link] === undefined) state.cours[link] = [[{}], \"\"];\n  if (ownProps.docId) return {\n    isSignedIn: state.auth.isSignedIn,\n    courseInfo: state.cours[link][0][0],\n    file: state.cours[link][1]\n  };\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nconst FormCoursewithReduxForm = reduxForm({\n  form: 'DocumentForm',\n  validate\n})(FormCourse);\nexport default connect(mapStateToProps, {\n  createDoc,\n  getCourse\n})(FormCoursewithReduxForm);","map":{"version":3,"sources":["/Users/Programmation/Documents/HubriumV_2Copie/client_3/src/components/Body/Routes/FormCourse.js"],"names":["React","connect","Field","reduxForm","createDoc","getCourse","history","FormCourse","Component","state","selectedFile","selectedFileURL","onSubmit","formValues","previewDom","document","querySelector","previewNoData","style","color","outline","animation","innerHTML","pad2","n","date","Date","now","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","type","match","slice","tags","console","log","formValuesAdd","URL","dateCreated","image","creator","props","userId","push","onFileChange","event","file","target","files","setState","previewImageDom","Promise","resolve","reject","reader","FileReader","onloadend","e","img","Image","onload","backgroundImage","result","height","Math","ceil","width","maxWidth","minWidth","backgroundSize","src","readAsDataURL","renderTitle","input","label","meta","courseInfo","error","touched","titleDoc","renderError","renderTags","renderTextArea","description","renderSelect","optionsState","componentDidMount","docId","render","handleSubmit","name","size","lastModifiedDate","validate","errors","title","length","matiere","mapStateToProps","ownProps","link","cours","undefined","isSignedIn","auth","FormCoursewithReduxForm","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport {createDoc,  getCourse} from '../../../actions';\nimport history from '../../../history';\n\nimport './FormCourse.scss';\n\nclass FormCourse extends React.Component {\n    state = { selectedFile: null, selectedFileURL: null };\n\n    componentDidMount() {\n        this.props.getCourse(this.props.docId);\n    }\n\n    onSubmit = (formValues) => {\n        const previewDom = document.querySelector(\".previewDiv\");\n        const previewNoData = document.querySelector(\".previewNoData\");\n\n        if (this.state.selectedFile === null) {\n            previewNoData.style.color = \"red\";\n            previewDom.style.outline = \"3px solid red\";\n            previewDom.style.animation = \"flipAround 1s\"\n            previewNoData.innerHTML = `NO FILE CHOSEN`\n        } else {\n            const {selectedFile, selectedFileURL} = this.state;\n            \n            function pad2(n) { return n < 10 ? '0' + n : n }\n            let date = new Date(Date.now());\n            date = date.getFullYear().toString() + pad2(date.getMonth() + 1) + pad2( date.getDate()) + pad2( date.getHours() ) + pad2( date.getMinutes() ) + pad2( date.getSeconds() );\n\n            let type = selectedFile.type.match(/\\/.*/g)[0].slice(1);\n            if (selectedFile.type.slice(5)===\"image\") type = \"image\"\n            else if (selectedFile.type.match(/\\/.*/g)[0].slice(1) === \"pdf\") type = \"pdf\"\n            \n            if (!formValues.tags) formValues.tags = \"\";\n            console.log(selectedFile);\n            let formValuesAdd = {...formValues, \n                URL: selectedFileURL, \n                type: type,\n                dateCreated: date,\n                image: \"https://cdn.pixabay.com/photo/2021/05/18/08/07/buildings-6262595_1280.jpg\",\n                creator: this.props.userId\n            };\n\n            this.props.createDoc(formValuesAdd);\n            this.props.onSubmit(formValuesAdd);\n            history.push('/courses');\n        }\n    }\n\n    renderError({ error, touched }) {\n        if (touched && error) return <div className=\"errorMessage\">{error}</div>;\n    }\n\n    onFileChange = async (event) => {\n        const file = event.target.files[0];\n        this.setState({ selectedFile: file });\n        const previewImageDom = document.querySelector(\"#previewImage\");\n        const previewDom = document.querySelector(\".previewDiv\");\n        const previewNoData = document.querySelector(\".previewNoData\");\n\n        await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onloadend = (e) => {\n                let img = new Image;\n                img.onload = function() {\n                    previewNoData.style.color = \"black\";\n                    previewDom.style.outline = \"none\";\n                    previewImageDom.style.backgroundImage =  `url(\"${e.target.result}\")`;\n                    previewImageDom.style.height = `${Math.ceil((200*img.height)/img.width)}px`;\n                    previewImageDom.style.maxWidth = \"200px\";\n                    previewImageDom.style.minWidth = \"200px\";\n                    previewImageDom.style.backgroundSize = \"contain\";\n                };\n                img.src = e.target.result;\n                this.setState({selectedFileURL: e.target.result});\n            }\n            reader.readAsDataURL(file);\n        });\n    }\n\n    renderTitle = ({ input, label, meta }) => {\n        const {courseInfo} = this.props;\n        return (\n            <div>\n                <input className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} autoComplete=\"off\" \n                    value={courseInfo ? courseInfo.titleDoc : \"\"} /> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderTags = ({ input, label, meta }, type) => {\n        const {courseInfo} = this.props;\n        return (\n            <div>\n                <input className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} autoComplete=\"off\"\n                    value={courseInfo ? courseInfo.tags : \"\"}/> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderTextArea = ({ input, label, meta }) => {\n        const {courseInfo} = this.props;\n        return (\n            <div>\n                <textarea className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} {...input} \n                    value={courseInfo ? courseInfo.description : \"\"}/> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    renderSelect= ({ input, label, meta }) => {\n        const {courseInfo} = this.props;\n        return (\n            <div>\n                <select className={`form_item ${meta.error && meta.touched ? 'error' : ''}`} value=\"anglais\" {...input}>\n                    <option></option>\n                    <option value=\"anglais\" selected={\"anglais\" == \"anglais\"}>Anglais</option>\n                    <option value=\"fran√ßais\" selected={\"anglais\" == \"fran√ßais\"}>Fran√ßais</option>\n                    <option value=\"pc\" selected={\"anglais\"  == \"pc\"}>Physique-Chimie</option>\n                    <option value=\"math\" selected={optionsState == \"histoire\"}>Math√©matiques</option>\n                    <option value=\"geographie\" selected={optionsState == \"histoire\"}>G√©ographie</option>\n                    <option value=\"svt\" selected={optionsState == \"histoire\"}>SVT</option>\n                    <option value=\"histoire\" selected={optionsState == \"histoire\"}>Histoire</option>\n                </select> \n                {this.renderError(meta)}\n            </div>\n        );\n    }\n\n    render() {\n        const {courseInfo} = this.props;\n        console.log(courseInfo);\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"formCourse\">\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"title\">Title </label><Field name=\"title\" component={this.renderTitle}/>\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"description\">Description </label><Field name=\"description\" component={this.renderTextArea}/>\n                </div>\n                \n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"tags\">Tags </label><Field name=\"tags\" component={this.renderTags}/>\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"matiere\">Mati√®re</label>\n                    <Field name=\"matiere\" className=\"form_item field\" component={this.renderSelect} />\n                </div>\n\n                <div className=\"itemCreate\">\n                    <label className=\"label\" htmlFor=\"file\">Course</label>\n                    <input name=\"file\" type=\"file\" onChange={this.onFileChange} className=\"uploadFile\" \n                        accept=\".jpeg,.png,.jpg,application/pdf\"/>\n                </div>\n\n                \n                <div className=\"itemCreate\">\n                    <label className=\"label\"> </label>\n                    <div className=\"form_item field previewDiv\" name=\"preview\">\n                        <div id=\"previewImage\" style={{\"width\": \"200px\", \"boxShadow\":\"1px 1px 10px black\"}} />\n                        {this.state.selectedFile \n                            ? <div className=\"fichePreview\">\n                                <h1>{this.state.selectedFile.name}</h1>\n                                <ul>\n                                    <li><strong>Size:</strong> {this.state.selectedFile.size/1000} Ko</li>\n                                    <li><strong>Last Modified:</strong> {`${this.state.selectedFile.lastModifiedDate}`}</li>\n                                </ul>\n                                </div> \n                            : <div className=\"previewNoData\">No data</div> }\n                    </div>\n                </div>\n                \n                <button className=\"buttonSubmitCreateDoc\">Submit</button>\n            </form>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if (!formValues.title) errors.title = 'You must enter a title';\n    else if (formValues.title.length >= 10 && 50 <= formValues.title.length) errors.title = 'You must enter minimum 10 characters and maximum 50 characters';\n\n    if (!formValues.description) errors.description = 'You must enter a description';\n    else if (formValues.description.length > 1000) errors.description = 'You must enter maximum 1000 characters';\n\n    if (!formValues.matiere) errors.matiere = 'Please choose a subject';\n\n    if (formValues.file === null) errors.file = 'Please choose a file';\n\n    console.log(errors);\n    return errors;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const link = `course_${ownProps.docId}`;\n    if (state.cours[link]===undefined) state.cours[link] = [[{}], \"\"];\n    if (ownProps.docId) return {  isSignedIn : state.auth.isSignedIn, courseInfo: state.cours[link][0][0], file: state.cours[link][1] };\n    return {isSignedIn : state.auth.isSignedIn };\n}\n\nconst FormCoursewithReduxForm = reduxForm({\n    form: 'DocumentForm',\n    validate\n})(FormCourse);\n\nexport default connect(mapStateToProps, {createDoc, getCourse})(FormCoursewithReduxForm);"]},"metadata":{},"sourceType":"module"}